l_english:
 debug.0002.t: "Prepare the Stork(s)"
 debug.0002.desc: "[mother.Custom('ShortName')|U] will become pregnant with [father.Custom('ShortName')] as the father."
 debug.0002.a: "Old fashioned pregnancy please"
 debug.0002.b: "One baby please"
 debug.0002.c: "A duo please"
 debug.0002.d: "A trio please"
 debug.0002.e: "Surprise me"

 debug_9601.t: "Dogs Can't Look Up"
 debug_9601.desc: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum posuere urna id sollicitudin condimentum. Duis vitae augue quis massa tristique consectetur vel sit amet velit.\n\nProin bibendum ligula non magna elementum viverra. Duis vel turpis posuere, vestibulum felis a, pellentesque magna. Vivamus cursus convallis sapien, at sodales eros molestie in. Suspendisse lorem leo, tempor nec sem vel, condimentum ultrices erat.\n\nDuis id felis nibh. Proin feugiat dui consectetur, rutrum lectus scelerisque, aliquet neque. Quisque ut arcu at orci interdum venenatis vel vitae elit. Phasellus congue neque in diam porta dictum. Etiam eu odio quis tortor pretium porta non in nisl. Duis."
 debug_9601.a: "Dogs cannot"
 debug_9601.b: "Dogs can"
 debug_9601.c: "Yes but cats"
 debug_9601.d: "I disagree with animals"

 debug_generic_option: "#D This is a debug option#!"
 debug_generic_option_can_disable_text: "#D , it will change if debug is disabled#!"
 debug_generic_option_can_disable: "$debug_generic_option$$debug_generic_option_can_disable_text$"
 debug_generic_option_shortened_trigger: "#D This trigger was made shorter because you have debug enabled#!"
 debug_generic_option_shortened_trigger_can_disable: "$debug_generic_option_shortened_trigger$$debug_generic_option_can_disable_text$"
 
 interaction_debug_main: "#D DEBUG Interactions#!"
 debug_main: "#D DEBUG Main#!"
 add_to_court_interaction: "Add to Court"
 change_tournament_score: "Change Tournament Score"
 score_massive: "Massive #P Increase#!"
 score_major: "Major #P Increase#!"
 score_medium: "Medium #P Increase#!"
 score_minor: "Minor #P Increase#!"
 decrease_score_massive: "Massive #N Decrease#!"
 decrease_score_major: "Major #N Decrease#!"
 decrease_score_medium: "Medium #N Decrease#!"
 decrease_score_minor: "Minor #N Decrease#!"
 add_hook_interaction: "Add Hook"
 add_weak_hook_interaction: "Weak Hook"
 add_strong_hook_interaction: "Strong Hook"
 add_perpetual_hook_interaction: "Perpetual Hook"
 send_friendliness: "Send Friendliness"
 send_antagonism: "Send Antagonism"
 give_crush_on_me: "Give Crush on me"
 create_betrothal_interaction: "Create Betrothal"
 break_betrothal_interaction: "Break Betrothal"
 give_murder_secret: "Give murder secret"
 give_secrets_to_court_interaction: "Give Secrets to Court"
 debug_invite_agent_to_schemes: "Invite agent to schemes"
 debug_imprison_simple_interaction: "Quick Imprison"
 set_up_secrets_in_realm_interaction: "Set up Secrets in entire Realm"
 debug_change_opinion_interaction: "Change Opinion"
 debug_make_hate_me_interaction: "Make Hate Me #N -200#!"
 debug_make_love_me_interaction: "Make Love Me #P +200#!"
 debug_make_dislike_me_interaction: "Make Dislike Me #N -100#!"
 debug_make_like_me_interaction: "Make Like Me #P +100#!"
 expose_known_secrets_interaction: "Expose known Secrets"
 reach_out_interaction: "Reach out"
 request_counsel_interaction: "Request counsel"
 check_ai_divergence_interaction: "Check AI Divergence"
 make_lover_interaction: "Make #p Lover#!"
 make_soulmate_interaction: "Make #p Soulmate#!"
 make_rival_interaction: "Make #p Rival#!"
 make_nemesis_interaction: "Make #p Nemesis#!"
 make_friend_interaction: "Make #p Friend#!"
 check_for_court_owner_interaction: "Check for Court Owner"
 learn_secrets_interaction: "Learn Secrets"
 take_title_interaction: "Take Title"
 take_title_and_vassals_interaction: "Take Title with its Vassals"
 take_domain_interaction: "Take Domain"
 take_realm_interaction: "Take Domain/Realm"
 get_claim_interaction: "Get Claim"
 add_pressed_claim_interaction: "Pressed Claim"
 add_unpressed_claim_interaction: "Unpressed Claim"
 start_pregnancy_interaction: "Start Pregnancy"
 check_sexuality_match_interaction: "Check sexuality match"
 change_character_weight_interaction: "Change Character Weight"
 add_character_weight_interaction: "Add Character Weight"
 remove_character_weight_interaction: "Remove Character Weight"
 grant_title_to_new_random_character_interaction: "Grant title to new random character"
 remove_rival_interaction: "Remove Rival"
 get_claim_on_all_creatable_interaction: "Get Claim on all Creatable"
 test_dynasty_prestige_interaction: "Test Dynasty Prestige"
 debug_start_great_holy_war_interaction: "Start Great Holy War"
 debug_change_council_task_interaction: "Change Council Task"
 debug_trigger_localization_testing_interaction: "Trigger localization testing"
 debug_start_era_of_crusades_interaction: "Trigger Era of Crusades"
 debug_start_era_of_jihads_interaction: "Trigger Era of Jihads"
 debug_launch_natural_crusade_interaction: "Launch natural Crusade"
 slay_character_interaction: "#difficulty_hard Slay#! Character!"
 random_slay_character_interaction: "Random Killer"
 null_slay_character_interaction: "No Killer"
 actor_slay_character_interaction: "Player Killer"
 give_bubonic_plague_interaction: "Bestow #difficulty_easy B#!#P u#!#difficulty_easy b#!#P o#!#difficulty_easy n#!#P i#!#difficulty_easy c P#!#P l#!#difficulty_easy a#!#P g#!#difficulty_easy u#!#P e#!"
 engage_in_single_combat: "@warning_icon! #X Initiates Single Combat#!"
 start_bout_interaction: "Start Duel/Board Game"
 start_bout_interaction_single_combat: "#BER FIGHT#!"
 start_bout_interaction_board_game_chess: "Chess"
 start_bout_interaction_board_game_pachisi: "Pachisi"
 start_bout_interaction_board_game_tabula: "Tabula"
 start_bout_interaction_board_game_hnefatafl: "Hnefatafl"
 start_bout_interaction_board_game_go: "Go"
 start_bout_interaction_board_game_fidchell: "Fidchell"
 give_criminal_trait_interaction: "Make them a hardened #difficulty_hard Criminal#!"
 give_criminal_trait_interaction_tt: "[recipient.Custom('ShortName')] is given a criminal trait"
 debug_sex_interaction: "#italic Sleep#! With Character"
 debug_change_every_county: "Take Action In Every County"
 debug_change_every_county.a: "Completely Control"
 test_effect_localization_interaction: "Test Interaction Effect Localization"
 change_cultural_acceptance_debug_interaction: "Change Cultural Acceptance"
 increase_cultural_acceptance_debug_interaction: "Cultural Acceptance #P +25%#!"
 decrease_cultural_acceptance_debug_interaction: "Cultural Acceptance #N -25%#!"
 learn_language_debug_interaction: "Insta-learn their Language"
 debug: "#D debug#!"
 set_relation_interaction: "Set Relationship"
 set_relation_debug: "Make #P Friend#!/#N Rival#!/#color_yellow Lover#!"
 set_relation_debug_friend: "#P Friend#!"
 set_relation_debug_rival: "#N Rival#!"
 set_relation_debug_lover: "#color_yellow Lover#!"
 set_relation_debug_lover_secret: "#color_yellow Lover#! #weak (Secret)#!"
 set_relation_debug_best_friend: "#difficulty_easy Best Friend#!"
 set_relation_debug_nemesis: "#difficulty_hard Nemesis#!"
 set_relation_debug_soulmate: "#difficulty_medium Soulmate#!"
 set_relation_debug_potential_friend: "#P #EMP Potential Friend#!#!"
 set_relation_debug_potential_rival: "#N #EMP Potential Rival#!#!"
 set_relation_debug_potential_lover: "#color_yellow #EMP Potential Lover#!#!"
 set_relation_debug_crush: "Crush"
 set_relation_debug_crush_on_me: "Crush (recipient crushes on you)"
 set_relation_debug_bully: "Bully"
 set_relation_debug_victim: "Victim"
 do_a_crime_embezzle_interaction: "Do Crime: Embezzle"
 do_a_crime_embezzle_interaction_desc: "The needs of the me outweigh the needs of the them"
 do_a_crime_embezzle_interaction_steal_x1: "Steal a single coin"
 do_a_crime_embezzle_interaction_steal_x100: "Steal a hundred coins"
 do_a_crime_embezzle_interaction_steal_x1000: "Steal a thousand coins"

 add_artifact_interaction: "Bestow Artifact"
 add_artifact_interaction_weapon: "Weapon"
 add_artifact_interaction_armor: "Armor"
 add_artifact_interaction_shinies: "Shinies"
 add_artifact_interaction_book: "Book"
 add_artifact_interaction_furniture: "Furniture"
 add_artifact_interaction_trinket: "Trinket"
 add_random_artifact_interaction: "Random Personal Artifact"
 christian_relic: "[GetReligionByKey('christianity_religion').GetAdjective] Relic"
 islam_relic: "[GetReligionByKey('islam_religion').GetAdjective] Relic"
 buddhism_relic: "[GetReligionByKey('buddhism_religion').GetAdjective] Relic"
 judaism_relic: "[GetReligionByKey('judaism_religion').GetAdjective] Relic"
 add_artifact_claim_interaction: "Claim Artifact"
 add_claim_on_artifact_interaction: "Add [personal_artifact_claim|E]"
 add_house_claim_on_artifact_interaction: "Add [house_artifact_claim|E]"
 take_artifact_player: "Give to Player"
 give_away_random_artifact_interaction: "Give to Random Neighbor"
 take_artifact_interaction: "Take Artifact"



 inspire_interaction: "Inspire"
 inspire_interaction_book: "Becomes inspired to write a book"
 inspire_interaction_weaver: "Becomes inspired to weave"
 inspire_interaction_adventure: "Becomes inspired to go on an adventure"
 inspire_interaction_artisan: "Becomes inspired to #EMP create#!"
 inspire_interaction_smith: "Becomes inspired to forge something"
 inspire_interaction_armor: "Becomes inspired to make armor"
 inspire_interaction_weapon: "Becomes inspired to forge a weapon"
 inspire_interaction_alchemy: "Becomes inspired to experiment with alchemy"
 debug_inspiration_weapon: "Weapon"
 debug_inspiration_armor: "Armor"
 debug_inspiration_book: "Book"
 debug_inspiration_weaver: "Weaver"
 debug_inspiration_adventure: "Adventure"
 debug_inspiration_artisan: "Artisan"
 debug_inspiration_smith: "Metalsmith"
 debug_inspiration_alchemy: "Alchemy"

 debug_murder_scheme_message: "A Murder scheme was started"
 debug_abduct_scheme_message: "An Abduct scheme was started"

 ai_diplomacy_stance_trigger: "AI diplomacy stance"
 is_ai_trigger: "Is AI"
 ai_honor_trigger: "AI honor"
 ai_rationality_trigger: "AI rationality"
 ai_energy_trigger: "AI energy"
 ai_greed_trigger: "AI greed"
 ai_compassion_trigger: "AI compassion"
 ai_zeal_trigger: "AI zeal"
 ai_boldness_trigger: "AI boldness"
 ai_sociability_trigger: "AI sociability"
 ai_values_divergence_trigger: "[TARGET_CHARACTER.Custom('ShortNamePossessive')] AI values divergence: $VALUE|V$"

 has_province_modifier_trigger: "Has Province modifier"
 current_day_trigger: "Current Day is"
 current_month_trigger: "Current Month is"
 current_year_trigger: "Current Year is"
 time_of_year: "Time of the Year is"
 current_date_trigger: "Current Date is [DATE.GetString|V]"

 ai_vengefulness_trigger: "AI vengefulness"
 has_icon_trigger: "Has icon"
 is_color_trigger: "Is color"
 in_color_list_trigger: "In color list"
 current_weight_trigger: "Current Weight"
 current_weight_for_portrait_trigger: "Current weight for portrait"
 year_of_birth_trigger: "[CHARACTER.Custom('ShortNamePossessive')] year of birth $CURRENT_VALUE$ is $COMPARATOR$ $NUM$"
 target_weight: "Target Weight"
 base_weight: "Base Weight: $NUM|V0$"

 is_tutorial_active_trigger: "Is Tutorial Active"
 game_start_date_trigger: "Game Start Date: [DATE.GetString|V]"
 years_from_game_start_trigger: "Years from game start: $NUM|V0$"
 current_computer_date_trigger: "Current computer date: $VALUE|V$"

 diplomacy_for_portrait_trigger: "Diplomacy for portrait"
 prowess_for_portrait_trigger: "Prowess for portrait"
 martial_for_portrait_trigger: "Martial for portrait"
 stewardship_for_portrait_trigger: "Stewardship for portrait"
 intrigue_for_portrait_trigger: "Intrigue for portrait"
 learning_for_portrait_trigger: "Learning for portrait"
 has_gene_trigger: "Has Gene"
 is_visibly_fertile_trigger: "Is visibly fertile"
 pregnancy_days_trigger: "Pregnancy Days: $VALUE|V$"

 has_variable_trigger: "Has Variable: $VARIABLE$"
 has_map_mode_trigger: "Has map mode"
 story_type_trigger: "Story type"
 owns_a_story_trigger: "Owns a story"
 is_widget_open_trigger: "Is widget open"

 num_of_relation_oaf_trigger: "Number of secret oafs: $NUM|V0$"
 num_of_relation_intrigue_student_trigger: "Number of intrigue students: $NUM|V0$"
 num_of_relation_mentor_trigger: "Number of mentor relationships: $NUM|V0$"
 num_of_relation_potential_friend_trigger: "Number of potential friends: $NUM|V0$"
 num_of_relation_potential_rival_trigger: "Number of potential rivals: $NUM|V0$"
 num_of_relation_potential_lover_trigger: "Number of potential lovers: $NUM|V0$"

 can_start_tutorial_lesson_trigger: "Can start tutorial lesson: $LESSON$"
 has_inactive_trait_trigger: "Has inactive trait"

 has_relation_oaf_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the oaf of [CHARACTER.Custom('ShortName')]"
 has_relation_soldier_friend_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the soldier friend of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_oaf_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the secret oaf of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_student_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the secret student of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_victim_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the secret victim of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_rival_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the secret rival of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_bully_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the secret bully of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_soulmate_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is marked as the secret soulmate of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_crush_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is marked as the secret crush of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_guardian_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the secret guardian of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_friend_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the secret friend of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_best_friend_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the secret best friend of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_court_physician_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the secret court physician of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_intrigue_mentor_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the secret intrigue mentor of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_soldier_friend_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is the secret soldier friend of [CHARACTER.Custom('ShortName')]"
 has_secret_relation_potential_friend_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is marked as a secret potential friend for [CHARACTER.Custom('ShortName')]"
 has_secret_relation_potential_lover_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is marked as a secret potential lover for [CHARACTER.Custom('ShortName')]"
 has_secret_relation_potential_rival_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is marked as a secret potential rival for [CHARACTER.Custom('ShortName')]"
 has_relation_potential_lover_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is marked as a potential lover for [CHARACTER.Custom('ShortName')]"
 has_relation_potential_friend_trigger: "[TARGET_CHARACTER.Custom('ShortName')] is marked as a potential friend for [CHARACTER.Custom('ShortName')]"

 has_any_secret_relation_trigger: "Has any type of secret relations"
 has_trait_with_flag_trigger: "Has [trait|E] with $FLAG$"
 is_frontend_character_selected: "Is a frontend character selected"
 fertility_trigger: "Fertility: $NUM|V0$"
 witchcraft_scheme_blocked_trigger: "Witchcraft scheme possible"
 has_game_rule_trigger: "Has game rule: [GAME_RULE.GetName]"
 release_only_trigger: "Release Only"
 has_global_variable_trigger: "Has Global Variable: $VARIABLE$"

 # disease tracking
 test.4.title: "Disease Data"
 test.4.desc: "Total characters: [ROOT.Var('local_copy_disease_data_global_character_amount').GetValue]\nPremature (age < 60) disease deaths: [ROOT.Var('local_copy_disease_data_global_premature_death_amount').GetValue]\nPremature age disease death chance: [ROOT.Var('disease_data_calc_premature_disease_death_percentage').GetValue]%\n\nCOMMON DISEASES:\nCommon disease chance: [ROOT.Var('disease_data_calc_common_disease_percentage').GetValue]%\nill contraction chance: [ROOT.Var('disease_data_calc_ill_percentage').GetValue]%\nill premature death chance: [ROOT.Var('disease_data_calc_ill_premature_death_chance').GetValue]%\npneumonic contraction chance: [ROOT.Var('disease_data_calc_pneumonic_percentage').GetValue]%\npneumonic premature death chance: [ROOT.Var('disease_data_calc_pneumonic_premature_death_chance').GetValue]%\n\nSERIOUS DISEASES:\nSerious disease chance: [ROOT.Var('disease_data_calc_serious_disease_percentage').GetValue]%\ngout_ridden contraction chance: [ROOT.Var('disease_data_calc_gout_ridden_percentage').GetValue]%\ngout_ridden premature death chance: [ROOT.Var('disease_data_calc_gout_ridden_premature_death_chance').GetValue]%\nleper contraction chance: [ROOT.Var('disease_data_calc_leper_percentage').GetValue]%\nleper premature death chance: [ROOT.Var('disease_data_calc_leper_premature_death_chance').GetValue]%\ntyphus contraction chance: [ROOT.Var('disease_data_calc_typhus_percentage').GetValue]%\ntyphus premature death chance: [ROOT.Var('disease_data_calc_typhus_premature_death_chance').GetValue]%\nconsumption contraction chance: [ROOT.Var('disease_data_calc_consumption_percentage').GetValue]%\nconsumption premature death chance: [ROOT.Var('disease_data_calc_consumption_premature_death_chance').GetValue]%\ncancer contraction chance: [ROOT.Var('disease_data_calc_cancer_percentage').GetValue]%\ncancer premature death chance: [ROOT.Var('disease_data_calc_cancer_premature_death_chance').GetValue]%\nlovers_pox contraction chance: [ROOT.Var('disease_data_calc_lovers_pox_percentage').GetValue]%\nlovers_pox premature death chance: [ROOT.Var('disease_data_calc_lovers_pox_premature_death_chance').GetValue]%\ngreat_pox contraction chance: [ROOT.Var('disease_data_calc_great_pox_percentage').GetValue]%\ngreat_pox premature death chance: [ROOT.Var('disease_data_calc_great_pox_premature_death_chance').GetValue]%\nsmallpox contraction chance: [ROOT.Var('disease_data_calc_smallpox_percentage').GetValue]%\nsmallpox premature death chance: [ROOT.Var('disease_data_calc_smallpox_premature_death_chance').GetValue]%\nbubonic_plague contraction chance: [ROOT.Var('disease_data_calc_bubonic_plague_percentage').GetValue]%\nbubonic_plague premature death chance: [ROOT.Var('disease_data_calc_bubonic_plague_premature_death_chance').GetValue]%\n\nhej[a_value.GetName]hey"

 set_relationship_debug_name: "Set Relationship"
 set_relationship_debug_desc: "Change your relationship with [recipient.Custom('ShortName')]"
 set_relationship_debug_friend_add: "Make Friend"
 set_relationship_debug_friend_remove: "Remove Friend"
 set_relationship_debug_best_friend_add: "Make Best Friend"
 set_relationship_debug_best_friend_remove: "Remove Best Friend"

 set_relationship_debug_lover_add: "Make Lover"
 set_relationship_debug_lover_remove: "Remove Lover"
 set_relationship_debug_soulmate_add: "Make Soulmate"
 set_relationship_debug_soulmate_remove: "Remove Soulmate"

 set_relationship_debug_childhood_victim_add: "Make Victim"
 set_relationship_debug_childhood_victim_remove: "Remove Victim"
 set_relationship_debug_childhood_bully_add: "Make Bully"
 set_relationship_debug_childhood_bully_remove: "Remove Bully"
 set_relationship_debug_rival_add: "Make Rival"
 set_relationship_debug_rival_remove: "Remove Rival"
 set_relationship_debug_nemesis_add: "Make Nemesis"
 set_relationship_debug_nemesis_remove: "Remove Nemesis"

 set_relationship_debug_nevermind: "Nevermind"
 
 EVENT_DEBUG_TOOLTIP: "#P Click to open Event Script in associated editor#!\n#weak (remember that you can change the default Editor!)#!"


 add_relic_interaction: "Add Relic"

 generate_artifact_with_history_interaction: "Generate Artifact With History"
 generate_artifact_with_history_debug_name: "$generate_artifact_with_history_interaction$"
 generate_artifact_with_history_debug_desc: "Generate an artifact with a specific type of history relating to [recipient.Custom('ShortName')]"
 generate_artifact_with_history_debug_given_unknown: "Given to [ROOT.Char.Custom('ShortName')]"
 generate_artifact_with_history_debug_given: "Given by [recipient.Custom('ShortName')]"
 generate_artifact_with_history_debug_discovered: "Discovered by [recipient.Custom('ShortName')] for [ROOT.Char.Custom('ShortName')]"
 generate_artifact_with_history_debug_stolen_unknown: "Stolen by [ROOT.Char.Custom('ShortName')]"
 generate_artifact_with_history_debug_stolen: "Stolen by [ROOT.Char.Custom('ShortName')] from [recipient.Custom('ShortName')]"
 generate_artifact_with_history_debug_created_unknown: "Created by an unknown benefactor for [ROOT.Char.Custom('ShortName')]"
 generate_artifact_with_history_debug_created: "Created by [recipient.Custom('ShortName')] for [ROOT.Char.Custom('ShortName')]"
 generate_artifact_with_history_debug_inherited_unknown: "Inherited by [ROOT.Char.Custom('ShortName')]"
 generate_artifact_with_history_debug_inherited: "Inherited from [recipient.Custom('ShortName')] by [ROOT.Char.Custom('ShortName')]"
 generate_artifact_with_history_debug_reforged: "Reforged by [ROOT.Char.Custom('ShortName')] in [ROOT.Char.GetCurrentLocation.GetName]"
 generate_artifact_with_history_debug_conquest: "Conquered by [ROOT.Char.Custom('ShortName')] in a war against [recipient.Custom('ShortName')]"
 generate_artifact_with_history_debug_taken_in_siege: "Conquered by [ROOT.Char.Custom('ShortName')] after the siege of [recipient.GetCurrentLocation.GetName]"

 add_glory_interaction: "Add Accolade Glory"
 add_glory_debug_high_tt: "Add 2500 Glory (set [accolade|E] to max rank)"
 add_glory_debug_low_tt: "Add 250 Glory"
 add_glory_debug_delete_tt: "Set Glory to 0"
 change_hunt_success_chance: "Change Hunt Success Chance"
 ERROR_FLAG_INDEX: "-"
 
 debug_destroy_artifact_interaction: "Destroy Artifact"
 end_diarchy_interaction: "End Diarchy"
 debug_travel_to_ruler_interaction: "Travel to Ruler"
 designate_diarch_interaction: "Travel to Ruler"
 debug_give_animal_interaction: "Start Dog/Cat Story"
 story_cycle_pet_dog: "Pet Dog"
 story_cycle_pet_cat: "Pet Cat"

 had_sex_with_effect.log.root_cheated_inappropriately: "had_sex_with_effect: root cheated on a partner that they wouldn't have\nCheater: [THIS.Char.Custom('ShortName')]\nWith: [PREV.Char.Custom('ShortName')]"
 had_sex_with_effect.log.target_cheated_inappropriately: "had_sex_with_effect: target cheated on a partner that they wouldn't have\nCheater: [THIS.Char.Custom('ShortName')]\nWith: [PREV.Char.Custom('ShortName')]"
 debug_add_truce_interaction: "Add Truce"
 truce_one_way_receive: "One-Way (Receive)"
 truce_one_way_give: "One-Way (Give)"
 truce_two_way: "Two-Way"
 TRUCE_DEBUG: "#D Debug Truce#!"
