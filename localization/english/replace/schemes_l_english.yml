l_english:
 SCHEME_AGENT_GOLD: "Bribe"
 SCHEME_AGENT_GOLD_VALID: "Pay [recipient.Custom('ShortNameNoTooltip')] [gold_i] [SCOPE.ScriptValue('bribe_value')|V0]"
 SCHEME_HOOK: "Use a [hook_i][hook|e]"
 SCHEME_TT_HEADER: "#T [SCHEME.GetFullActionName]#!"
 SCHEME_TT_BODY: "Target: [SCHEME.GetTarget.Custom('UIName')]\nProgress: [SCHEME.GetProgress|0V]/#V 10#! (#V ~[SCHEME.GetEstimatedTimeRemaining]#!)\n[success_chance|E]: #V $SUCCESS_CHANCE$%#!"
 SCHEME_TT_SECRECY: "[secrecy|E]: #V $SECRECY$%#!"
 SCHEME_TT_EXPOSED: "#X The Scheme Has Been Exposed#!"
 SCHEME_OWNER_NOT_EXPOSED: "Scheme Owner not exposed yet"
 SCHEME_SOME_AGENTS_NOT_EXPOSED: "Some Scheme Agents are not exposed yet"
 SCHEME_UNKNOWN: "Unknown Scheme"
 SCHEME_INFLUENCE_NUMBER: "$VALUE|2$"
 SCHEME_PROGRESS_DESCRIPTION: "Scheme Progress: [SCHEME.GetProgress|0V]/#V 10#!"
 SCHEME_PROGRESS_FROZEN: "The progress is frozen"
 SCHEME_PROGRESS_FROZEN_DATE: "The progress is frozen until [DATE.GetString|V]"
 SCHEME_PROGRESS_FROZEN_REASON: "The progress is frozen because $REASON$"
 SCHEME_PROGRESS_FROZEN_DATE_REASON: "The progress is frozen until [DATE.GetString|V] because $REASON$"
 scheme_setup_heads_up: "I attempt to complete my scheme."
 SCHEME_FULL_ACTION_NAME: "[SCHEME.GetActionName] [SCHEME.GetTarget.Custom('ShortNameNoTooltip')]"
 SCHEME_MY_LEARNING: "My [learning|E]: $VALUE|+=0$"
 SCHEME_AGENT_LEARNING: "Agent [learning|E]: $VALUE|+=0$"
 SCHEME_MY_INTRIGUE: "My [intrigue|E]: $VALUE|+=0$"
 scheme_target_died: "[TARGET_CHARACTER.Custom('ShortName')|U] has died"
 scheme_target_not_in_diplomatic_range: "[TARGET_CHARACTER.Custom('ShortName')|U] is no longer within [diplomatic_range|E]"
 restart_scheme_tt: "The Scheme restarts at 0 Scheme Progress"
 fabricate_hook_failed_reset_message: "$fabricate_hook$ Failed"
 scheme_remain_secret_roll_tt: "The Scheme is discovered"
 murder: "Murder"
 murder_action: "Murder"
 murder_desc: "It is time for [SCHEME.GetTarget.Custom('ShortNameNoTooltip')] to face the judgment of [SCHEME.GetOwner.GetFaith.HighGodName]!"
 murder_desc_general: "$murder$ is a [hostile_scheme|E] that aims to kill its target. It is a [secret_scheme|E] based on [intrigue|E], that can recruit [agents|E].\n\nA successful $murder$ will result in the [character_death_death|E] of the [scheme_target|E]. A murder that successfully remains secret will give the [scheme_owner|E] a Murder [secret|E].\n\nBeing discovered attempting to murder, or successfully murdering, someone is a serious [crime|E]."
 scheme_interaction_tt_murder_approved: "Attempt to murder [recipient.Custom('ShortNameNoTooltip')]"
 murder_successful_roll_tt: "[target.Custom('ShortName')] is killed!"
 murder_entourage_successful_roll_tt: "Some members of [target.Custom('ShortNamePossessiveNoTooltip')] entourage are killed!"
 murder_become_discovered_roll_tt: "#N My involvement is discovered#!"
 MURDER_SUCCESS_DESC: "[TARGET_CHARACTER.Custom('ShortName')|U] is killed"
 MURDER_DISCOVERY_DESC: "You are not exposed for the [crime|E] of murder"
 ABDUCT_SUCCESS_DESC: "[TARGET_CHARACTER.Custom('ShortName')|U] becomes your [prisoner|E]. However, you will be exposed for the [crime|E] of kidnapping."
 ABDUCT_DISCOVERY_DESC: "You are not exposed for the [crime|E] of kidnapping"
 BEFRIEND_SUCCESS_DESC: "[TARGET_CHARACTER.Custom('ShortName')|U] might become your [friend|E]"
 COURT_SUCCESS_DESC: "You gain [prestige|E] and [TARGET_CHARACTER.Custom('ShortName')] may become your Soulmate"
 CONVERT_TO_WITCHCRAFT_SUCCESS_DESC: "[TARGET_CHARACTER.Custom('ShortName')|U] becomes a Witch"
 SEDUCE_SUCCESS_DESC: "[TARGET_CHARACTER.Custom('ShortName')|U] becomes your [lover|E]"
 SWAY_SUCCESS_DESC: "[TARGET_CHARACTER.Custom('ShortNamePossessive')] [opinion|E] of you will increase by #P [CHARACTER.MakeScope.ScriptValue('sway_opinion_increase_per_success')|V0]#!"
 CLAIM_THRONE_SUCCESS_DESC: "You get a [pressed_claim|E] on [TARGET_CHARACTER.GetPrimaryTitle.GetName]"
 CLAIM_THRONE_DISCOVERY_DESC: "You avoid losing a large amount of [prestige|E]"
 SCHEME_I_AM_COUNCILLOR_OF_TARGET: "You serve on [target.Custom('ShortNamePossessive')] [council|E]: $VALUE|+=0$"
 CLAIM_THRONE_SCHEME_AGENT_COUNCILLOR: "[target.Custom('ShortNamePossessive')] councillor"
 CLAIM_THRONE_SCHEME_AGENT_COURT_CHAPLAIN: "[target.Custom('ShortNamePossessive')] [target.GetCouncillorPosition( 'councillor_court_chaplain' ).GetPositionName]"
 CLAIM_THRONE_SCHEME_AGENT_VASSAL: "[target.Custom('ShortNamePossessive')] vassal"
 
 learn_language: "Learn Language"
 learn_language_action: "Learn the Language of"
 learn_language_desc: "I will attempt to learn [SCHEME.GetTarget.Custom('ShortNamePossessiveNoTooltip')] [SCHEME.GetTarget.GetCulture.GetLanguage.GetName] [language|E]."
 learn_language_desc_general: "The Learn Language [scheme|E] is a [personal_scheme|E] where you try to learn the [language|E] of the [scheme_target|E]. $learn_language_desc_general_shared$"
 scheme_interaction_tt_learn_language_approved: "Attempt to learn [recipient.Custom('ShortNamePossessiveNoTooltip')] [recipient.GetCulture.GetLanguage.GetName] [language|E], improving the attitude of all who speak that Language towards you.\n\n#weak Current [language_limit|E]: [actor.MakeScope.ScriptValue('current_extra_languages')|V0] out of [actor.MakeScope.ScriptValue('language_soft_cap')|V0]#!"
 learn_language_learn_language_success_message: "Language Learned"
 learn_language_learn_language_failed_message: "Failed to Learn Language"
 scheme_interaction_tt_learn_language_desc: "I will learn [recipient.Custom('ShortNamePossessiveNoTooltip')] [language|E]!"
 learn_language_invalidated_cannot_learn_language_desc: "You can no longer learn [target.Custom('ShortNamePossessive')] [language|E]"
 learn_language_invalidated: "$learn_language$ Invalidated"
 learn_language_invalidated_dead_desc: "[target.Custom('ShortName')|U] has passed away. You can no longer use the $learn_language$ on [target.GetHerHim]."
 learn_language_complete: "You have learned [target.Custom('ShortNamePossessiveNoTooltip')] [target.GetCulture.GetLanguage.GetName] [language|E]"
 learn_language_invalidated_title: "$learn_language$ Ends"
 LEARN_LANGUAGE_SUCCESS_DESC: "You learn the [TARGET_CHARACTER.GetCulture.GetLanguage.GetName] [language|E]\n#weak Current [language_limit|E]: [CHARACTER.MakeScope.ScriptValue('current_extra_languages')|V0] out of [CHARACTER.MakeScope.ScriptValue('language_soft_cap')|V0]#!"
 scheme_target_same_language_as_existing_scheme: "You're already learning [TARGET_CHARACTER.GetCulture.GetLanguage.GetName]"

 abduct: "Abduct"
 abduct_action: "Abduct"
 abduct_desc: "I will kidnap and [imprison|E] [SCHEME.GetTarget.Custom('ShortNameNoTooltip')]!"
 abduct_desc_general: "The $abduct$ [scheme|E] is a [hostile_scheme|E] that aims to [imprison|E] its target. It is a [secret_scheme|E] based on [intrigue|E], that can recruit [agents|E].\n\nA successfully abducted [scheme_target|E] will be imprisoned by the  [scheme_owner|E]."
 scheme_interaction_tt_abduct_approved: "[recipient.Custom('ShortName')] will soon be my prisoner!"
 abduct_successful_roll_tt: "[target.Custom('ShortNameNoTooltip')] becomes my prisoner!"
 abduct_success_discovery_tt: "A successful Abduction will reveal my identity\nOtherwise:"
 abduct_become_discovered_roll_tt: "I am discovered!"
 abduct_scheme_invalidated_title: "@scheme_icon! Abduct Scheme Ends"
 abduct_scheme_i_imprisoned_them_message: "[target.Custom('ShortName')|U] is already in my prison"
 scheme_target_imprisoned_by_other: "[TARGET_CHARACTER.Custom('ShortName')|U] has been imprisoned by [CHARACTER.Custom('ShortName')]"

 befriend: "Befriend"
 befriend_action: "Befriend"
 befriend_desc: "With care and attention a friendship might flourish between [SCHEME.GetTarget.Custom('ShortNameNoTooltip')] and myself!"
 befriend_desc_general: "The Befriend [scheme|E] is a [personal_scheme|E] that aims to make the [scheme_target|E] one's [friend|E].\nA multitude of factors determine the [success_chance|E] of the Scheme, including [trait|E] compatibility and [opinion|E]."
 scheme_interaction_tt_befriend_approved: "I will win the friendship of [recipient.Custom('ShortName')]!"
 befriend_already_friend: "[recipient.Custom('ShortName')] is already your friend"
 befriend_already_lover: "[TARGET_CHARACTER.Custom('ShortName')|U] is already in love with you"
 befriend_invalidated_title: "@personal_scheme_icon! Befriend Scheme Ends"
 befriend_invalid: "I stop trying to befriend [target.Custom('ShortName')|U] as we can no longer become [friends|E]"

 seduce: "Seduce"
 seduce_action: "Seduce"
 seduce_desc: "I will win [SCHEME.GetTarget.Custom('ShortNameNoTooltip')] over with sweet words and sweeter gestures – [SCHEME.GetTarget.GetSheHe] will soon be mine!"
 seduce_desc_general: "Seduction is a [personal_scheme|E] that aims to make the [scheme_target|E] one's [lover|E].\nA multitude of factors determine the [success_chance|E], including opinion, trait compatibility and marriage status.\n\nSeduce Schemes may be [secret_scheme_single|E], depending on who the target is."
 seduce_interaction_desc_consort: "Attempt to seduce [recipient.Custom('ShortNameNoTooltip')] #weak (your [actor.Custom2('RelationToMeShort', SCOPE.sC('recipient'))])#!, improving [recipient.GetHerHis] opinion of you and possibly gaining the [lover|E] status"
 scheme_interaction_tt_seduce_approved: "Attempt to seduce [recipient.Custom('ShortNameNoTooltip')], [extramarital_sex_sleeping_with|E] [recipient.GetHerHim] and possibly making [recipient.GetHerHim] your [lover|E]"
 scheme_interaction_tt_wrong_gender_stress: "Seducing a [recipient.GetWomanMan] will cause you [stress|E]"
 scheme_interaction_tt_wrong_gender_no_lover: "[recipient.Custom('ShortName')] and you will not become lovers"
 seduce_invalid: "I stop trying to seduce [target.Custom('ShortName')|U] as we can no longer become [lovers|E]."
 seduce_invalidated_title: "@personal_scheme_icon! Seduction Scheme Ends"

 courting: "Romance"
 courting_action: "Romance"
 courting_desc: "I will declare my undying love for [SCHEME.GetTarget.Custom('ShortNameNoTooltip')] and win [SCHEME.GetTarget.GetHerHis] heart through noble acts of chivalry."
 courting_desc_general: "The Romance [scheme|E]is a type of [personal_scheme|E] where the [scheme_owner|E] seeks to improve their [prestige|E] and to potentially find a [soulmate|E] by choosing another character to court in a proper and noble fashion."
 scheme_interaction_tt_courtship_approved: "Attempt to romance [recipient.Custom('ShortNameNoTooltip')], gaining [prestige|E], improving their [opinion|E] of you, and possibly becoming [soulmates|E]!"
 courting_invalid: "I stop trying to romance [target.Custom('ShortName')|U] as we can no longer become [soulmates|E]."
 court_scheme_invalidated_title: "@personal_scheme_icon! Romance Scheme Ends"

 sway: "Sway"
 sway_action: "Sway"
 sway_desc: "I will attempt to make [SCHEME.GetTarget.Custom('ShortNameNoTooltip')] understand me, and perhaps even like me."
 sway_desc_general: "The Sway Scheme is a [personal_scheme|E] that aims to improve another character's [opinion|E] of you. This scheme primarily relies on your own [diplomacy|E]. As it is not a [hostile_scheme|E], it is not [secret_scheme_single|E] and does not use [agents|E].\n\nUnlike most Schemes, Sway restarts upon completion. The Opinion you gain from it stacks, so keeping it active will make the [scheme_target|E] like you more and more."
 scheme_interaction_tt_sway_approved: "Attempt to sway [recipient.Custom('ShortNameNoTooltip')], improving [recipient.GetHerHis] [opinion|E] of you"
 sway_sway_success_message: "[target.Custom('ShortNameNoTooltip')] Swayed"
 sway_sway_failed_message: "[target.Custom('ShortNameNoTooltip')] is not Swayed"
 sway_continue: "You continue your efforts"
 sway_try_again: "You will make another attempt"
 scheme_interaction_tt_sway_desc: "I will sway [recipient.Custom('ShortNameNoTooltip')] to my cause!"
 sway_foreign_target: "Target is in Foreign Realm: $VALUE|=+0$"
 previously_swayed: "Previously swayed: $VALUE|=+0$"
 sway_my_diplomacy: "Your Diplomacy: $VALUE|=+0$"
 sway_my_rival: "Your Rival: $VALUE|=+0$"
 sway_invalidated_war: "Due to the War between you, you can no longer $sway_action$ [target.Custom('ShortName')]"
 sway_invalidated_dead: "[target.Custom('ShortName')|U] has passed away. You can no longer $sway_action$ [target.GetHerHim]"
 sway_complete: "You have Swayed [target.Custom('ShortName')] as much as you can"
 sway_invalidated_title: "@personal_scheme_icon! Sway Scheme Ends"
 YOU_SPEAK_THE_LANGUAGE: "You speak [target.GetCulture.GetLanguage.GetName]: $VALUE|=+0$"

 claim_throne: "Claim Throne"
 claim_throne_desc: "I will claim the throne of [SCHEME.GetTarget.Custom('ShortNameNoTooltip')]!"
 claim_throne_desc_general: "A Hostile [scheme|E] that allows a character to gain a [claim|E] against their direct [liege|E]'s [primary_title|E]."
 claim_throne_action: "Claim the Throne of"
 claim_throne_successful_roll_tt: "You gain a [pressed_claim|E] on the [target_title.GetName]"
 claim_throne_interaction_desc: "Attempt to claim the throne of [recipient.GetPrimaryTitle.GetNameNoTier]"
 claim_throne_success_discovery_tt: "\nRegardless of Success or Failure:"
 claim_throne_become_discovered_roll_tt: "Your fabrications are discovered!"

 fabricate_hook: "Fabricate Hook"
 fabricate_hook_desc: "Employ underhanded means to create a [hook|E] out of nothing"
 fabricate_hook_desc_general: "A [scheme|E] where a character attempts to forge or manipulate their way into gaining a [hook|E] on the target."
 fabricate_hook_interaction: "Fabricate Hook"
 fabricate_hook_action: "Fabricate a Hook on"
 fabricate_hook_interaction_desc: "Attempt to fabricate a [hook|E] on [recipient.Custom('ShortNameNoTooltip')]"
 fabricate_hook_scheme_invalidated_title: "Fabricate Hook Scheme Ends"
 fabricate_hook_has_gained_hook: "You have gained a [hook|E] on [target.Custom('ShortName')]"
 fabricate_hook_i_may_not_fabricate_again: "[owner.Custom('ShortName')|U] may not try to fabricate hooks at [court_owner.Custom('ShortNamePossessive')] court again for 5 years"
 fabricate_hook_gained_manipulation_title: "Hook Fabricated: Manipulated"
 fabricate_hook_gained_indebted_title: "Hook Fabricated: Indebted"
 fabricate_hook_gained_threat_title: "Hook Fabricated: Threatened"
 fabricate_hook_gained_loyalty_title: "Hook Fabricated: Loyalty"
 FABRICATE_HOOK_RULER_TARGET: "Ruler: $VALUE|=+0$"
 FABRICATE_HOOK_TARGETING_SPYMASTER: "[target.Custom('ShortName')|U] is a [spymaster|E]: $VALUE|=+0$"
 FABRICATE_HOOK_DECEITFUL: "[GetTrait('deceitful').GetName( GetPlayer )]: $VALUE|=+0$"
 FABRICATE_HOOK_HONEST: "[GetTrait('honest').GetName( GetPlayer )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_TRUSTING: "[target.Custom('ShortName')|U] is [GetTrait('trusting').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_INTELLECT_BAD_1: "[target.Custom('ShortName')|U] is [GetTrait('intellect_bad_1').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_INTELLECT_BAD_2: "[target.Custom('ShortName')|U] is [GetTrait('intellect_bad_2').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_INTELLECT_BAD_3: "[target.Custom('ShortName')|U] is [GetTrait('intellect_bad_3').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_INTELLECT_GOOD_1: "[target.Custom('ShortName')|U] is [GetTrait('intellect_good_1').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_INTELLECT_GOOD_2: "[target.Custom('ShortName')|U] is [GetTrait('intellect_good_2').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_INTELLECT_GOOD_3: "[target.Custom('ShortName')|U] is [GetTrait('intellect_good_3').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_SCHEMER: "[target.Custom('ShortName')|U] is [GetTrait('schemer').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_PARANOID: "[target.Custom('ShortName')|U] is [GetTrait('paranoid').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_FICKLE: "[target.Custom('ShortName')|U] is [GetTrait('fickle').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_ARROGANT: "[target.Custom('ShortName')|U] is [GetTrait('arrogant').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_GREEDY: "[target.Custom('ShortName')|U] is [GetTrait('greedy').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_TARGET_CRAVEN: "[target.Custom('ShortName')|U] is [GetTrait('craven').GetName( target )]: $VALUE|=+0$"
 FABRICATE_HOOK_SPYMASTER_INTRIGUE: "Spymaster [intrigue|E]: $VALUE|=+0$"
 FABRICATE_HOOK_SUCCESS_DESC: "You gain a [hook|E] on [TARGET_CHARACTER.Custom('ShortName')]"
 FABRICATE_HOOK_DISCOVERY_DESC: "You can keep fabricating Hooks at [TARGET_CHARACTER.Custom('ShortNamePossessiveNoTooltip')] [court|E]"


 scheme_interaction_tt_spy_on_approved: "I will soon find whatever [recipient.Custom('ShortName')] seeks to keep secret!"
 
 SCEHEME_ON_COOLDOWN: "#X Cannot use the $SCHEME_NAME$ on [TARGET_CHARACTER.Custom('ShortName')] until [DATE.GetStringLong]#!"
 scheme_target_is_incapable: "[target.Custom('ShortName')|U] is [GetTrait('incapable').GetName( target )]"

 
 elope: "$elope_verb$"
 elope_action: "$elope_verb$ with"
 elope_verb: "Elope"
 elope_desc: "Bring [SCHEME.GetTarget.Custom('ShortNameNoTooltip')] to your [court|E] and [marry|E] [SCHEME.GetTarget.GetHerHim]"
 elope_desc_general: "Eloping is a [personal_scheme|E] where the [scheme_target|E] moves to the [scheme_owner|E]'s court to marry them.\n\nA multitude of factors determines the [success_chance|E] of the Scheme, including [rank|E] and opinion.\n\nOnly [lovers|E] can elope."
 ELOPE_SUCCESS_OWNER_INTRIGUE: "[owner.Custom('ShortNamePossessive')|U] Intrigue: $VALUE|=+0$"
 ELOPE_SUCCESS_TARGET_INTRIGUE: "[target.Custom('ShortNamePossessive')|U] Intrigue: $VALUE|=+0$"
 ELOPE_SUCCESS_TARGETS_LIEGE_INTRIGUE: "[target.GetLiege.Custom('ShortNamePossessive')|U] Intrigue: $VALUE|=+0$"
 ELOPE_SUCCESS_TARGETS_LIEGES_SPYMASTER_INTRIGUE: "[target.GetLiege.Custom('ShortNamePossessive')|U] Spymaster's Intrigue: $VALUE|=+0$"
 ELOPE_SUCCESS_UNIMPORTANT: "[target.Custom('ShortName')|U] is not important: $VALUE|=+0$"
 ELOPE_SUCCESS_IMPRISONED: "[target.Custom('ShortName')|U] is [imprisoned|E]: $VALUE|=+0$"
 ELOPE_SUCCESS_DESC: "[TARGET_CHARACTER.Custom('ShortName')|U] joins your Court and you get married"
 ELOPE_SUCCESS_TARGETS_LIEGE_KNOWS_ABOUT_RELATIONSHIP: "Relationship is known to [target.GetLiege.Custom('ShortName')]: $VALUE|=+0$"
 elope_interaction_desc: "Attempt to Elope with [recipient.Custom('ShortNameNoTooltip')] to [marry|E] in secret"
 elope_scheme_invalidated_title: "@personal_scheme_icon! Elope Scheme Ends"
 scheme_target_no_longer_courtier: "[TARGET_CHARACTER.Custom('ShortName')|U] has left the court of [CHARACTER.Custom('ShortName')]"
 scheme_target_no_longer_courtier_no_var: "[CHARACTER.Custom('ShortName')] is no longer a courtier"
 scheme_target_is_your_courtier: "[CHARACTER.Custom('ShortName')] is your courtier now"
 scheme_target_no_longer_lover: "You and [TARGET_CHARACTER.Custom('ShortName')|U] are no longer lovers"


  # Steal Back Artifact 
 steal_back_artifact: "Steal Artifact"
 start_stealing_back_artifact: "Steal Artifact #weak (Scheme)#!"
 steal_back_artifact_general_desc: "A [scheme|E] where a character organizes a heist to steal an [artifact|e] they have an claim on"
 # In the game, the scheme window shows [action] [target], hence the added 'from'
 steal_back_artifact_action: "Steal Artifact from"
 steal_back_artifact_desc: "I will attempt to steal what's rightfully mine from [SCHEME.GetTarget.Custom('ShortNameNoTooltip')]."
 steal_back_artifact_desc_general: "Attempt to steal an artifact on which you have a claim from the target."
 scheme_interaction_tt_steal_back_artifact_approved: "[recipient.Custom('ShortName')] will no longer own what's rightfully mine!"
 steal_back_artifact_success_message: "[artifact_to_steal.GetName] is Yours!"
 steal_back_artifact_failed_message: "Artifact Remains With [target.Custom('ShortNameNoTooltip')]"
 scheme_interaction_tt_steal_back_artifact_desc: "I will take back what [recipient.Custom('ShortNameNoTooltip')] is unrighteously keeping from me!"
 steal_back_artifact_foreign_target: "Target is in Foreign Realm: $VALUE|=+0$"
 steal_back_artifact_my_intrigue: "Your Intrigue: $VALUE|=+0$"
 steal_back_artifact_complete: "You have stolen an artifact from [target.Custom('ShortName')]"
 steal_back_artifact_invalidated_title: "@scheme_icon! Steal Artifact Scheme Ends"
 start_stealing_back_artifact_notification: "Start Heist to Steal Artifact"
 they_steal_back_artifact_must_have_claim_blocker: "[CHARACTER.Custom('ShortName')|U] does not own an artifact that [TARGET_CHARACTER.Custom('ShortName')] has a claim on"
 i_steal_back_artifact_must_have_claim_blocker: "[TARGET_CHARACTER.Custom('ShortName')] does not own an artifact that I have a claim on"

 STEAL_BACK_ARTIFACT_SUCCESS_DESC: "You will steal an artifact from [TARGET_CHARACTER.Custom('ShortName')] that you have a claim on"
 steal_back_artifact_invalidated_war: "Due to the War between you, you can no longer $steal_back_artifact_action$ [target.Custom('ShortName')]"
 steal_back_artifact_invalidated_dead: "[target.Custom('ShortName')|U] has passed away. You can no longer $steal_back_artifact_action$ [target.GetHerHim]"
 steal_back_artifact_can_start_scheme: "I cannot $steal_back_artifact_action$ at this time"

 learn_own_court_language: "Learn Court Language"
 learn_own_court_language_action: "Learn Court Language from"
 learn_own_court_language_desc: "I will attempt to learn [SCHEME.GetOwner.GetCourtLanguage.GetName], my [court_language|E], from [SCHEME.GetTarget.Custom('ShortNameNoTooltip')]."
 learn_own_court_language_desc_general: "The Learn My Court Language [scheme|E] is a [personal_scheme|E] where you try to learn the [court_language|E] of your [royal_court|E]. $learn_language_desc_general_shared$"
 scheme_interaction_tt_learn_own_court_language_approved: "Attempt to learn [recipient.Custom('ShortNamePossessiveNoTooltip')] [court_language|E].\n\n#weak Current [language_limit|E]: [actor.MakeScope.ScriptValue('current_extra_languages')|V0] out of [actor.MakeScope.ScriptValue('language_soft_cap')|V0]#!"

 learn_liege_court_language: "$learn_own_court_language$"
 learn_liege_court_language_action: "Learn Court Language from"
 learn_liege_court_language_desc: "I will attempt to learn [SCHEME.GetOwner.GetLiege.GetCourtLanguage.GetName], my [liege|E]'s [court_language|E], from [SCHEME.GetTarget.Custom('ShortNameNoTooltip')]."
 learn_liege_court_language_desc_general: "The Learn My Liege's Court Language [scheme|E] is a [personal_scheme|E] where you try to learn the [court_language|E] of your [liege|E]'s' [royal_court|E]. $learn_language_desc_general_shared$"
 scheme_interaction_tt_learn_liege_court_language_approved: "Attempt to learn [recipient.Custom('ShortNamePossessiveNoTooltip')] your liege's [court_language|E].\n\n#weak Current [language_limit|E]: [actor.MakeScope.ScriptValue('current_extra_languages')|V0] out of [actor.MakeScope.ScriptValue('language_soft_cap')|V0]#!"
 learn_court_language_interaction_notification: "Learn Court Language"
 learn_language_invalidated_already_know_court_language_desc: "You already know this [court_language|E]"

 learn_language_desc_general_shared: "This Scheme primarily relies on your own [learning|E].\n\nThe [success_chance|E] is affected by many things, but mainly by your [learning_skill|E], that of your [court_chaplain|E], if you have a shared [heritage|E], and how many Languages you already know. Younger [characters|E] will also learn new languages more easily."

 # FABRICATE HOOK EXTRA
 CAN_NOT_FABRICATE_HOOKS_ON_WANDERERS: "Hooks cannot be fabricated on Wandering characters"

 DIARCH_REALM_INFLUENCE: "[diarchs|E] [scheme|E] better in their [liege|E]'s [realm|E]: $VALUE|=+%/0$"

 FREEZE_REASON_TRAVELING: "you are traveling."
 FREEZE_REASON_TARGET_TRAVELING: "[SCHEME.GetTarget.Custom('ShortNameNoTooltip')] is traveling."
 BEFRIENDING_AT_FEAST: "[SCHEME.GetTarget.Custom('ShortNameNoTooltip')] is attending the same feast as you."

 overthrow_regent: "Overthrow Regent"
 overthrow_regent_action: "Overthrow"
 overthrow_regent_desc: "I will kidnap and [imprison|E] [SCHEME.GetTarget.Custom('ShortNameNoTooltip')], forcing them to hand [SCHEME.GetTarget.GetHerHis] office as [SCHEME.GetTarget.GetDiarchTitle] to me!"
 overthrow_regent_desc_general: "The $overthrow_regent$ [scheme|E] is a [hostile_scheme|E] that aims usurp its target place as [regent|E] whilst [imprisoning|E] them. It is a [secret_scheme|E] based on [intrigue|E], that can recruit [agents|E].\n\nA successfully overthrown [scheme_target|E] will be $game_concept_imprisoned$ by the [scheme_owner|E] (if [landed|E]) or the [liege|E] (if not)."
 overthrow_regent_scheme_invalidated_title: "@scheme_icon! Abduct Scheme Ends"
 overthrow_regent_scheme_i_imprisoned_them_message: "[target.Custom('ShortName')|U] is already in my prison"
 overthrow_regent_scheme_cannot_become_regent: "[TARGET_CHARACTER.Custom('ShortName')|U] has been imprisoned by [CHARACTER.Custom('ShortName')]"
 OVERTHROW_REGENT_SUCCESS_DESC: "$ABDUCT_SUCCESS_DESC$"
 OVERTHROW_REGENT_DISCOVERY_DESC: "$ABDUCT_DISCOVERY_DESC$"
 i_could_not_take_their_place: "I am not valid to be [TARGET_CHARACTER.GetDiarchTitle]"
