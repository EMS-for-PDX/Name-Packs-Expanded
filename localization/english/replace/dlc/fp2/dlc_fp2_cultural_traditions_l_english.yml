l_english:
 ##################################################
 # Aragonese Specific
 tradition_fp2_state_ransoming_name: "State Ransoming"
 tradition_fp2_state_ransoming_desc: "Every soldier goes into battle ready to risk life and limb for their liege! Does it not behoove the liege to offer them some guarantee of safety, regardless of station, should they be captured in the field?"

 culture_parameter_knights_die_less_but_are_captured_more: "[knights|E] in [battle|E] die less but are captured more"
 culture_parameter_characters_more_likely_to_be_captured_in_sieges: "[characters|E] with a [liege|E] of this [culture|E] are more likely to be captured in [sieges|E]"
 culture_parameter_can_demand_higher_ransoms_from_lower_tiers: "Can demand higher ransoms for lower [rank|E] [rulers|E]"

 ##################################################
 # Castilian Specific
 tradition_fp2_strategy_gamers_name: "Tabletop Warriors"
 tradition_fp2_strategy_gamers_desc: "Any commander can gamble and get lucky on the day of battle. A #EMP real#! strategist keeps their mind honed through practice and pretend so that they have no #EMP need#! of 'luck'."

 culture_parameter_commanders_likelier_to_gain_commander_traits: "[commanders|E] are more likely to gain [commander_traits|E]"
 culture_parameter_may_challenge_to_board_games: "May always challenge other [characters|E] to [board_games|E]"
 culture_parameter_may_wager_land_on_board_games: "May wager a personally held [county|E] in [board_games|E], if both players have this rule"
 
 challenge_to_2p_chess_interaction: "Challenge to Board Game"
 challenge_to_2p_chess_interaction_desc: "Play [recipient.GetName] at a [board_game|E]"
 CHALLENGE_TO_2P_CHESS_INTERACTION_NOTIFICATION: "Salutations my fine [actor.Custom2('RelationToMeShort', recipient)]! Would you care for a rousing game of [actor.Custom('BG_GameType_Concept_Dark')]?"
 CHESS_FRIENDLY: "Friendly Game"
 CHESS_PRESTIGE: "Wager Fame"
 CHESS_GOLD: "Wager Fortune"
 CHESS_LAND: "Wager Land"
 challenge_to_2p_chess_interaction.decline.actor.tt: "[recipient.Custom('TitledFirstName')] has better things to do"
 challenge_to_2p_chess_interaction.decline.recipient.tt: "[actor.Custom('TitledFirstName')] is upset with me"
 challenge_to_2p_chess_interaction.accept.game_commences.tt: "A game of [actor.Custom('BG_GameType_Concept')] will begin immediately"
 perk_interaction.0122.victor_toast.t: "You win the game!"
 perk_interaction.0122.loser_toast.t: "You lose the game!"
 fp2_bg_interaction.winner.actor: "If [Select_CString( actor.IsLocalPlayer, 'you win', 'your opponent wins' )] the wager"
 fp2_bg_interaction.winner.recipient: "If [Select_CString( recipient.IsLocalPlayer, 'you win', 'your opponent wins' )] the wager"
 fp2_bg_recipient_banned_from_board_games: "[character|E] cannot currently play a board game"
 challenge_to_2p_chess_interaction.need_bordering_non_capital_domains.tt: "You and your opponent must have bordering [domains|E] that are not your [realm_capitals|E]"
 bet_gold_actor_not_enough_gold: "You do not have enough [gold|E]"
 bet_gold_recipient_not_enough_gold: "Your opponent do not have enough [gold|E]"

 BG_OPINION_OWN_SKILL_ASSESSMENT: "My Skill: $VALUE|=+0$"
 BG_OPINION_STAKES_ARE_LOW: "Low stakes: $VALUE|=+0$"
 BG_OPINION_FRIENDLY_TRAIT_GREGARIOUS: "[GetTrait('gregarious').GetName(recipient.Self)] loves the idea of a $CHESS_FRIENDLY$: $VALUE|=+0$"
 BG_OPINION_FRIENDLY_TRAIT_HUMBLE: "[GetTrait('humble').GetName(recipient.Self)] loves the idea of a $CHESS_FRIENDLY$: $VALUE|=+0$"
 BG_OPINION_FRIENDLY_TRAIT_SHY: "[GetTrait('shy').GetName(recipient.Self)] likes the idea of a $CHESS_FRIENDLY$: $VALUE|=+0$"
 BG_OPINION_FRIENDLY_TRAIT_COMPASSIONATE: "[GetTrait('compassionate').GetName(recipient.Self)] likes the idea of a $CHESS_FRIENDLY$: $VALUE|=+0$"
 BG_OPINION_FRIENDLY_TRAIT_CALLOUS: "[GetTrait('callous').GetName(recipient.Self)] dislikes the idea of a $CHESS_FRIENDLY$: $VALUE|=+0$"
 BG_OPINION_FRIENDLY_TRAIT_GREEDY: "[GetTrait('greedy').GetName(recipient.Self)] hates the idea of just a $CHESS_FRIENDLY$: $VALUE|=+0$"
 BG_OPINION_FRIENDLY_TRAIT_ARROGANT: "[GetTrait('arrogant').GetName(recipient.Self)] hates the idea of just $CHESS_FRIENDLY$: $VALUE|=+0$"
 BG_OPINION_PRESTIGE_TRAIT_BRAVE: "[GetTrait('brave').GetName(recipient.Self)] hungers to $CHESS_PRESTIGE$: $VALUE|=+0$"
 BG_OPINION_PRESTIGE_TRAIT_ARROGANT: "[GetTrait('arrogant').GetName(recipient.Self)] hungers to $CHESS_PRESTIGE$: $VALUE|=+0$"
 BG_OPINION_PRESTIGE_TRAIT_GREGARIOUS: "[GetTrait('gregarious').GetName(recipient.Self)] wishes to $CHESS_PRESTIGE$: $VALUE|=+0$"
 BG_OPINION_PRESTIGE_TRAIT_AMBITIOUS: "[GetTrait('ambitious').GetName(recipient.Self)] wishes to $CHESS_PRESTIGE$: $VALUE|=+0$"
 BG_OPINION_PRESTIGE_TRAIT_CONTENT: "[GetTrait('content').GetName(recipient.Self)] does not wish to $CHESS_PRESTIGE$: $VALUE|=+0$"
 BG_OPINION_PRESTIGE_TRAIT_SHY: "[GetTrait('shy').GetName(recipient.Self)] does not wish to $CHESS_PRESTIGE$: $VALUE|=+0$"
 BG_OPINION_PRESTIGE_TRAIT_HUMBLE: "[GetTrait('humble').GetName(recipient.Self)] wishes to $CHESS_PRESTIGE$: $VALUE|=+0$"
 BG_OPINION_PRESTIGE_TRAIT_CRAVEN: "[GetTrait('craven').GetName(recipient.Self)] wishes to $CHESS_PRESTIGE$: $VALUE|=+0$"
 BG_OPINION_GOLD_TRAIT_PROFLIGATE: "[GetTrait('profligate').GetName(recipient.Self)] wishes to $CHESS_GOLD$: $VALUE|=+0$"
 BG_OPINION_GOLD_TRAIT_GREEDY: "[GetTrait('greedy').GetName(recipient.Self)] wishes to $CHESS_GOLD$: $VALUE|=+0$"
 BG_OPINION_GOLD_TRAIT_AMBITIOUS: "[GetTrait('ambitious').GetName(recipient.Self)] wishes to $CHESS_GOLD$: $VALUE|=+0$"
 BG_OPINION_GOLD_TRAIT_GENEROUS: "[GetTrait('generous').GetName(recipient.Self)] wishes to $CHESS_GOLD$: $VALUE|=+0$"
 BG_OPINION_GOLD_TRAIT_LAZY: "[GetTrait('lazy').GetName(recipient.Self)] wishes to $CHESS_GOLD$: $VALUE|=+0$"
 BG_OPINION_GOLD_TRAIT_DILIGENT: "[GetTrait('diligent').GetName(recipient.Self)] wishes to $CHESS_GOLD$: $VALUE|=+0$"
 BG_OPINION_LAND_TRAIT_PROFLIGATE: "[GetTrait('profligate').GetName(recipient.Self)] wishes to $CHESS_LAND$: $VALUE|=+0$"
 BG_OPINION_LAND_TRAIT_ARBITRARY: "[GetTrait('arbitrary').GetName(recipient.Self)] wishes to $CHESS_LAND$: $VALUE|=+0$"
 BG_OPINION_LAND_TRAIT_AMBITIOUS: "[GetTrait('ambitious').GetName(recipient.Self)] wishes to $CHESS_LAND$: $VALUE|=+0$"
 BG_OPINION_LAND_TRAIT_BRAVE: "[GetTrait('brave').GetName(recipient.Self)] wishes to $CHESS_LAND$: $VALUE|=+0$"
 BG_OPINION_LAND_TRAIT_CRAVEN: "[GetTrait('craven').GetName(recipient.Self)] does not wish to $CHESS_LAND$: $VALUE|=+0$"
 BG_OPINION_LAND_TRAIT_CONTENT: "[GetTrait('content').GetName(recipient.Self)] does not wish to $CHESS_LAND$: $VALUE|=+0$"
 BG_OPINION_LAND_TRAIT_JUST: "[GetTrait('just').GetName(recipient.Self)] thinks it would be illegal to $CHESS_LAND$: $VALUE|=+0$"
 BG_OPINION_RELATIONSHIP_GOOD_MILD: "We have a positive [relationship|E]: $VALUE|=+0$"
 BG_OPINION_RELATIONSHIP_GOOD_MODERATE: "$BG_OPINION_RELATIONSHIP_GOOD_MILD$"
 BG_OPINION_RELATIONSHIP_GOOD_MAJOR: "$BG_OPINION_RELATIONSHIP_GOOD_MILD$"
 BG_OPINION_RELATIONSHIP_BAD_MILD: "We have a negative [relationship|E]: $VALUE|=+0$"
 BG_OPINION_RELATIONSHIP_BAD_MODERATE: "$BG_OPINION_RELATIONSHIP_BAD_MILD$"
 BG_OPINION_RELATIONSHIP_BAD_MAJOR: "$BG_OPINION_RELATIONSHIP_BAD_MILD$"
 BG_OPINION_RELATIONSHIP_BAD_SRSGMR_MILD: "I want to #EMP destroy#! you at games: $VALUE|=+0$"
 BG_OPINION_RELATIONSHIP_BAD_SRSGMR_MODERATE: "$BG_OPINION_RELATIONSHIP_BAD_SRSGMR_MILD$"
 BG_OPINION_RELATIONSHIP_BAD_SRSGMR_MAJOR: "$BG_OPINION_RELATIONSHIP_BAD_SRSGMR_MILD$"

 ##################################################
 # Andalusian Specific
 tradition_fp2_malleable_subjects_name: "Malleable Subjects"
 tradition_fp2_malleable_subjects_desc: "Who's to say what freedom is? One king is much like another, regardless of culture. True freedom comes from learning how to live with any liege."

 culture_parameter_harder_to_convert_county_culture_without_heritage: "Harder to [promote_culture|E] in [counties|E] of this [culture|E] unless you share a [heritage|E]"
 culture_parameter_easier_to_convert_county_culture_with_heritage: "Easier to [promote_culture|E] in [counties|E] of this [culture|E] if you share a [heritage|E]"
 culture_parameter_powerful_foreign_knights_find_you_attractive: "More likely to attract wandering [knight|E] [characters|E]"

 iberian_heritage_trigger: "The [culture|E] must be of Iberian [heritage|E]"
 TRADITION_EASIER_TO_CULTURE_CONVERT_WITH_HERITAGE_MODIFIER: "Local [cultural|E] [tradition|E] bonus"
 TRADITION_HARDER_TO_CULTURE_CONVERT_WITHOUT_HERITAGE_MODIFIER: "Local [cultural|E] [tradition|E] penalty"

 ##################################################
 # Generic
 tradition_fp2_ritualised_friendship_name: "Ritualized Friendship"
 tradition_fp2_ritualised_friendship_desc: "Blood may be thicker than water, but wine makes for better living."

 culture_parameter_automatic_befriend_access: "Automatically has access to the [GetScheme('befriend').GetTypeName] [scheme|E]"
 culture_parameter_may_propose_best_friendship: "May ask [friends|E] to become [best_friends|E]"
 culture_parameter_strong_hooks_and_stress_effects_best_friends: "[best_friends|E] receive [strong_hooks|E] on each other but gain [stress|E] when using them"
 culture_parameter_may_select_friendship_synergy_bonus: "[best_friends|E] can use an interaction to gain bonus [skills|E] via [modifiers|E] at the expense of extra [stress|E]"

 propose_best_friendship_interaction: "Swear Oath of True Friendship"
 propose_best_friendship_interaction_desc: "Suggest that [recipient.Custom('ShortNameNoTooltip')] and you become [best_friends|E]"
 propose_best_friendship_interaction.tt.already_best_friends: "You're already the best of friends!"
 propose_best_friendship_interaction.tt.actor_has_best_friend: "You already #EMP have#! a best friend!"
 propose_best_friendship_interaction.tt.recipient_has_best_friend: "[recipient.Custom('FirstNameNoTooltip')] already #EMP has#! a best friend!"
 PROPOSE_BEST_FRIENDSHIP_NOTIFICATION: "[recipient.Custom('FirstNameNoTooltip')], my [recipient.Custom('SisterBrother')], my companion, my confidante — will you join me in declaring our friendship to be the truest and brightest in all the world, with all the debts of loyalty that that entails?"
 propose_best_friendship_decline_summary: "I regret that I cannot commit to such a stark escalation in our relationship. I hope you understand."
 propose_best_friendship_interaction.accept.actor.tt: "[recipient.Custom('TitledFirstNameNoTooltip')] accepts enthusiastically!"
 propose_best_friendship_interaction.accept.recipient.tt: "[actor.Custom('TitledFirstNameNoTooltip')] accepts enthusiastically!"
 propose_best_friendship_interaction.decline.actor.tt: "[recipient.Custom('TitledFirstNameNoTooltip')] politely spurns you"
 propose_best_friendship_interaction.decline.recipient.tt: "[actor.Custom('TitledFirstNameNoTooltip')] is upset by the rejection"
 reaffirm_best_friendship_interaction: "Reaffirm Oath of True Friendship"
 reaffirm_best_friendship_interaction_desc: "As [recipient.Custom('FirstNameNoTooltip')] is already your best friend, it is only logical that you swear an oath of mutual fealty"
 REAFFIRM_BEST_FRIENDSHIP_NOTIFICATION: "[recipient.Custom('FirstNameNoTooltip')], you are the truest [recipient.GetWomanMan] I know and have ever known — will you join me in declaring a mutual oath of loyalty and fealty to one another?"
 reaffirm_best_friendship_interaction.accept.actor.tt: "$propose_best_friendship_interaction.accept.actor.tt$"
 reaffirm_best_friendship_interaction.accept.recipient.tt: "$propose_best_friendship_interaction.accept.recipient.tt$"
 reaffirm_best_friendship_interaction.decline.actor.tt: "[recipient.Custom('TitledFirstNameNoTooltip')] spits on your friendship"
 reaffirm_best_friendship_interaction.decline.recipient.tt: "[actor.Custom('TitledFirstNameNoTooltip')] feels horrifyingly betrayed"
 synergise_friendship_interaction: "Synergize Friendship"
 synergise_friendship_interaction_desc: "Draw on your [best_friend|E] [recipient.Custom('TitledFirstNamePossessiveNoTooltip')] education and training for support"
 SYNERGISE_FRIENDSHIP_NOTIFICATION: "[recipient.Custom('FirstNameNoTooltip')], I know I can count on you in all things, and I wonder... would you commit to always aid each other in matters of experience and training?"
 synergise_friendship_interaction.accept.actor.tt: "$propose_best_friendship_interaction.accept.actor.tt$"
 synergise_friendship_interaction.accept.recipient.tt: "$propose_best_friendship_interaction.accept.recipient.tt$"
 synergise_friendship_interaction.decline.actor.tt: "$propose_best_friendship_interaction.decline.actor.tt$"
 synergise_friendship_interaction.decline.recipient.tt: "$propose_best_friendship_interaction.decline.recipient.tt$"
 PROPOSE_BEST_FRIEND_OPINION_TRAIT_SHY: "[GetTrait('shy').GetName(recipient.Self)] is nervous about becoming [best_friends|E]: $VALUE|=+0$"
 PROPOSE_BEST_FRIEND_OPINION_TRAIT_ARBITRAY: "[GetTrait('arbitrary').GetName(recipient.Self)] is wary of becoming [best_friends|E]: $VALUE|=+0$"
 PROPOSE_BEST_FRIEND_OPINION_TRAIT_GREGARIOUS: "[GetTrait('gregarious').GetName(recipient.Self)] approves of becoming [best_friends|E]: $VALUE|=+0$"
 PROPOSE_BEST_FRIEND_OPINION_TRAIT_JUST: "[GetTrait('just').GetName(recipient.Self)] approves of becoming [best_friends|E]: $VALUE|=+0$"
 PROPOSE_BEST_FRIEND_OPINION_LACKING_CULTURAL_PARAMETER: "[recipient.GetCulture.GetName] [culture|E] does not understand the true meaning of friendship: $VALUE|=+0$"
 REAFFIRM_BEST_FRIEND_OPINION_HAS_CULTURAL_PARAMETER: "[recipient.GetCulture.GetName] [culture|E] understands the true meaning of friendship: $VALUE|=+0$"

 SYNERGY_BONUS_ACTOR: "Draw primarily on your [education|E]"
 SYNERGY_BONUS_RECIPIENT: "Draw primarily on your [best_friend_possessive|E] [education|E]"
 SYNERGY_BONUS_MIXED: "Draw on a mix of both of your [educations|E]"
 synergise_friendship_interaction_cannot_share_education: "You cannot draw on [best_friend_possessive|E] [education|E] exclusively if it's the same as yours"
 
 fp2_single_synergy_neutral_modifier_desc_label: "This character has established a collaborative relationship with their best friend. Though helpful, the effort can be draining."
 fp2_single_synergy_diplomacy_modifier: "Enhanced Diplomacy"
 fp2_single_synergy_diplomacy_modifier_desc: "$fp2_single_synergy_neutral_modifier_desc_label$"
 fp2_single_synergy_martial_modifier: "Enhanced Martial"
 fp2_single_synergy_martial_modifier_desc: "$fp2_single_synergy_neutral_modifier_desc_label$"
 fp2_single_synergy_stewardship_modifier: "Enhanced Stewardship"
 fp2_single_synergy_stewardship_modifier_desc: "$fp2_single_synergy_neutral_modifier_desc_label$"
 fp2_single_synergy_intrigue_modifier: "Enhanced Intrigue"
 fp2_single_synergy_intrigue_modifier_desc: "$fp2_single_synergy_neutral_modifier_desc_label$"
 fp2_single_synergy_learning_modifier: "Enhanced Learning"
 fp2_single_synergy_learning_modifier_desc: "$fp2_single_synergy_neutral_modifier_desc_label$"

 fp2_double_synergy_diplomacy_modifier: "Synergistic Diplomacy"
 fp2_double_synergy_martial_modifier: "Synergistic Martial"
 fp2_double_synergy_stewardship_modifier: "Synergistic Stewardship"
 fp2_double_synergy_intrigue_modifier: "Synergistic Intrigue"
 fp2_double_synergy_learning_modifier: "Synergistic Learning"
 fp2_double_synergy_neutral_modifier_desc_label: "This character commits ample time to aiding their best friend, using their education to the fullest. Though helpful, the effort can be draining."
 fp2_double_synergy_diplomacy_diplomacy_modifier: "$fp2_double_synergy_diplomacy_modifier$"
 fp2_double_synergy_diplomacy_diplomacy_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_diplomacy_martial_modifier: "$fp2_double_synergy_diplomacy_modifier$"
 fp2_double_synergy_diplomacy_martial_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_diplomacy_stewardship_modifier: "$fp2_double_synergy_diplomacy_modifier$"
 fp2_double_synergy_diplomacy_stewardship_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_diplomacy_intrigue_modifier: "$fp2_double_synergy_diplomacy_modifier$"
 fp2_double_synergy_diplomacy_intrigue_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_diplomacy_learning_modifier: "$fp2_double_synergy_diplomacy_modifier$"
 fp2_double_synergy_diplomacy_learning_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_martial_diplomacy_modifier: "$fp2_double_synergy_martial_modifier$"
 fp2_double_synergy_martial_diplomacy_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_martial_martial_modifier: "$fp2_double_synergy_martial_modifier$"
 fp2_double_synergy_martial_martial_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_martial_stewardship_modifier: "$fp2_double_synergy_martial_modifier$"
 fp2_double_synergy_martial_stewardship_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_martial_intrigue_modifier: "$fp2_double_synergy_martial_modifier$"
 fp2_double_synergy_martial_intrigue_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_martial_learning_modifier: "$fp2_double_synergy_martial_modifier$"
 fp2_double_synergy_martial_learning_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_stewardship_diplomacy_modifier: "$fp2_double_synergy_stewardship_modifier$"
 fp2_double_synergy_stewardship_diplomacy_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_stewardship_martial_modifier: "$fp2_double_synergy_stewardship_modifier$"
 fp2_double_synergy_stewardship_martial_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_stewardship_stewardship_modifier: "$fp2_double_synergy_stewardship_modifier$"
 fp2_double_synergy_stewardship_stewardship_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_stewardship_intrigue_modifier: "$fp2_double_synergy_stewardship_modifier$"
 fp2_double_synergy_stewardship_intrigue_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_stewardship_learning_modifier: "$fp2_double_synergy_stewardship_modifier$"
 fp2_double_synergy_stewardship_learning_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_intrigue_diplomacy_modifier: "$fp2_double_synergy_intrigue_modifier$"
 fp2_double_synergy_intrigue_diplomacy_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_intrigue_martial_modifier: "$fp2_double_synergy_intrigue_modifier$"
 fp2_double_synergy_intrigue_martial_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_intrigue_stewardship_modifier: "$fp2_double_synergy_intrigue_modifier$"
 fp2_double_synergy_intrigue_stewardship_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_intrigue_intrigue_modifier: "$fp2_double_synergy_intrigue_modifier$"
 fp2_double_synergy_intrigue_intrigue_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_intrigue_learning_modifier: "$fp2_double_synergy_intrigue_modifier$"
 fp2_double_synergy_intrigue_learning_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_learning_diplomacy_modifier: "$fp2_double_synergy_learning_modifier$"
 fp2_double_synergy_learning_diplomacy_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_learning_martial_modifier: "$fp2_double_synergy_learning_modifier$"
 fp2_double_synergy_learning_martial_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_learning_stewardship_modifier: "$fp2_double_synergy_learning_modifier$"
 fp2_double_synergy_learning_stewardship_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_learning_intrigue_modifier: "$fp2_double_synergy_learning_modifier$"
 fp2_double_synergy_learning_intrigue_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"
 fp2_double_synergy_learning_learning_modifier: "$fp2_double_synergy_learning_modifier$"
 fp2_double_synergy_learning_learning_modifier_desc: "$fp2_double_synergy_neutral_modifier_desc_label$"

 ritual_best_friend_hook: "Best Friend"
 lost_ritualised_best_friend: "Lost Best Friend"
 on_hook_used.tt.best_friend_stress: "You abuse your friendship with [target.Custom('ShortNameNoTooltip')]"
 death.lost_ritualised_best_friend.tt: "Your best friend in the whole world has died"
 need_at_least_one_friend: "You need at least one [friend|E]"
 guess_you_need_more_friends_desc: "You don't have at least three [friends|E]"
 scheme_power_against_friend_add: "[scheme_power|E] against [friends|E]"
 scheme_power_against_best_friend_add: "[scheme_power|E] against [best_friends|E]"

 on_set_relation_best_friend.gain_hook.root.tt: "Your friendship with [target.Custom('FirstNameNoTooltip')] is ritually significant"
 on_set_relation_best_friend.gain_hook.target.tt: "Your friendship with [ROOT.Char.Custom('FirstNameNoTooltip')] is ritually significant"
 on_remove_relation_best_friend.lose_hook.root.tt: "Without friendship, you have no hold over [target.Custom('FirstNameNoTooltip')]"
 on_remove_relation_best_friend.lose_hook.target.tt: "Without friendship, you have no hold over [ROOT.Char.Custom('FirstNameNoTooltip')]"
 on_remove_relation_best_friend.lose_synergy_modifiers.root.tt: "[target.Custom('FirstNameNoTooltip')] is no longer supporting your daily tasks"
 on_remove_relation_best_friend.lose_synergy_modifiers.target.tt: "[ROOT.Char.Custom('FirstNameNoTooltip')] is no longer supporting your daily tasks"
 on_death_relation_best_friend.lose_synergy_modifiers.root.tt: "$on_remove_relation_best_friend.lose_synergy_modifiers.root.tt$"
