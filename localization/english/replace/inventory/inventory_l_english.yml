l_english:
 MOD_ARTIFACT_DECAY_REDUCTION_ADD: "Artifact Decay Reduction"
 MOD_ARTIFACT_DECAY_REDUCTION_MULT: "$MOD_ARTIFACT_DECAY_REDUCTION_ADD$"

 artifact_history_created_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_created_desc: "Created by [SelectLocalization( HISTORY_ENTRY.HasActor, HISTORY_ENTRY.GetActor.GetNameNoTooltip, 'UNKNOWN_BENEFACTOR' )] for [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal] at [HISTORY_ENTRY.GetLocation.GetNameNoTooltip]"
 artifact_history_stolen_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_stolen_desc: "Stolen by [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal]"
 artifact_history_created_before_history_title: "Unknown Creation"
 artifact_history_created_before_history_desc: "The details surrounding the creation of this artifact are unknown"
 artifact_history_given_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_given_desc: "Given to [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal]"
 artifact_history_inherited_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_inherited_desc: "Inherited by [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal]"
 artifact_history_conquest_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_conquest_desc: "Taken by [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal] in a war against [HISTORY_ENTRY.GetActor.GetTitledFirstNameNicknamedNoTooltipRegnal]"
 artifact_history_taken_in_siege_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_taken_in_siege_desc: "Seized by [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal] after the siege of [HISTORY_ENTRY.GetLocation.GetNameNoTooltip]"
 artifact_history_reforged_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_reforged_desc: "Reforged by [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal] in [HISTORY_ENTRY.GetLocation.GetNameNoTooltip]"
 artifact_history_discovered_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_discovered_desc: "Discovered by [HISTORY_ENTRY.GetActor.GetTitledFirstNameNicknamedNoTooltipRegnal] for [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal] at [HISTORY_ENTRY.GetLocation.GetNameNoTooltip]"
 artifact_history_claimed_by_house_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_claimed_by_house_desc: "Claimed by [house|E] [HISTORY_ENTRY.GetActor.GetHouse.GetNameNoTooltip]"
 artifact_history_won_in_duel_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_won_in_duel_desc: "Won in duel by [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal]"
 artifact_history_taken_in_battle_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_taken_in_battle_desc: "Taken by [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal] in the battle of [HISTORY_ENTRY.GetLocation.GetNameNoTooltip]"
 artifact_history_prize_created_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_prize_created_desc: "Offered by [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal] as a [GetActivityType( 'activity_tournament' ).GetName] [prize|E]"
 artifact_history_prize_awarded_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_prize_awarded_desc: "Awarded to [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal] as a [contest|E] [prize|E]"
 artifact_history_creator_discovered_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_creator_discovered_desc: "Discovered to have originally been created by [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal]"
 artifact_history_purchased_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_purchased_desc: "Purchased by [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal]"
 artifact_history_ransomed_title: "[HISTORY_ENTRY.GetDate.GetString]"
 artifact_history_ransomed_desc: "Ransomed by [HISTORY_ENTRY.GetRecipient.GetTitledFirstNameNicknamedNoTooltipRegnal]"

 UNKNOWN_BENEFACTOR: "an unknown benefactor"

 ARTIFACT_DURABILITY: "Durability: $CURRENT|1$ / $MAX|1$"
 ARTIFACT_HISTORY: "Artifact History"

 crown: "Crown"
 helmet: "Headgear"
 miscellaneous: "$trinket$"
 miscellaneous_when_not_court: "$trinket$"
 regalia: "Regalia"
 weapon: "Weapon"
 primary_armament: "$weapon$"
 armor: "Armor"
 trinket: "Trinket"
 trinket_1: "$trinket$"
 trinket_2: "$trinket$"
 trinket_3: "$trinket$"
 trinket_4: "$trinket$"

 # Names for the artifact that are placed in the slot
 artifact_slot_pedestal: "Pedestal Item"
 artifact_slot_helmet: "Headgear"
 artifact_slot_miscellaneous: "Trinket"
 artifact_miscellaneous_when_not_court: "$miscellaneous_when_not_court$"
 artifact_slot_armor: "Armor"
 artifact_slot_sculpture: "Furniture"
 artifact_slot_primary_armament: "Weapon"
 artifact_slot_throne: "Throne"
 artifact_slot_wall_big: "Large Wall Ornament"
 artifact_slot_regalia: "Regalia"
 artifact_slot_wall_small: "Small Wall Ornament"
 artifact_slot_book: "Book"

 artifact_crown: "Crown"
 artifact_helmet: "Headgear"
 artifact_miscellaneous: "$trinket$"
 artifact_regalia: "Regalia"
 artifact_regalia_simple: "$regalia$"
 artifact_armor: "Armor"
 artifact_trinket: "Trinket"
 artifact_pedestal: "Pedestal Item"
 artifact_wall_big: "Large Wall Ornament"
 artifact_tapestry: "Tapestry"
 artifact_sculpture: "Furniture"
 artifact_scientific_apparatus: "Scientific Apparatus"
 artifact_wall_small: "Small Wall Ornament"
 artifact_animal_skull: "Animal Skull"
 artifact_animal_hide: "Animal Hide"
 artifact_animal_hide_big: "Massive Animal Hide"
 artifact_throne: "Throne"
 artifact_box: "Box"
 artifact_goblet: "Goblet"
 artifact_jug: "Jug"
 artifact_book: "Book"
 artifact_panacea: "Panacea"
 artifact_elixir: "Elixir"
 artifact_philosophers_stone: "Philosopher's Stone"
 # These keys all use $weapon$ because despite being unique types, they all go in the weapon slot
 artifact_sword: "sword"
 artifact_axe: "axe"
 artifact_spear: "spear"
 artifact_hammer: "hammer"
 artifact_dagger: "dagger"
 artifact_mace: "mace"
 # Same as the above, but for armor types
 artifact_armor_mail: "$armor$"
 artifact_armor_plate: "$armor$"
 artifact_armor_scale: "$armor$"
 artifact_armor_lamellar: "$armor$"
 artifact_armor_laminar: "$armor$"
 artifact_armor_brigandine: "$armor$"


 pedestal: "Pedestal"
 wall_big: "Large Wall Ornament"
 wall_small: "Small Wall Ornament"
 sculpture: "Furniture"
 throne: "Throne"
 book: "Book"

 wall_big_1: "$wall_big$"
 wall_big_2: "$wall_big$"
 wall_big_3: "$wall_big$"
 wall_small_1: "$wall_small$"
 wall_small_2: "$wall_small$"
 wall_small_3: "$wall_small$"
 sculpture_1: "$sculpture$"
 sculpture_2: "$sculpture$"
 lectern_1: "$book$"
 lectern_2: "$book$"
 lectern_3: "$book$"
 pedestal_1: "$pedestal$"
 pedestal_2: "$pedestal$"
 pedestal_3: "$pedestal$"
 pedestal_4: "$pedestal$"

#rarity levels
 common: ""
 masterwork: "Masterwork"
 famed: "Famed"
 illustrious: "Illustrious"
 
#old rarity levels (unused?)
 legendary: "Legendary"
 rare: "Rare"

 REFORGE_ARTIFACT_TITLE: "Reforge Artifact"
 REFORGE: "Reforge"
 REFORGE_ARTIFACT: "#T $REFORGE_ARTIFACT_TITLE$#!"
 REPAIR_ARTIFACT_TITLE: "Repair Artifact"
 REPAIR: "Repair"
 REPAIR_ARTIFACT: "#T $REPAIR_ARTIFACT_TITLE$#!"
 EFFECTS_ON_ARTIFACT: "Effects on [Artifact.GetName]"
 CHARACTER_PAYS_REFORGE_COST: "[CHARACTER.Custom('ShortName')|U] will pay $COST$ to reforge [ARTIFACT.GetName]"
 CHARACTER_PAYS_REPAIR_COST: "[CHARACTER.Custom('ShortName')|U] will pay $COST$ to repair [ARTIFACT.GetName]"
 ARTIFACT_CHANGES_NAME: "[ARTIFACT.GetName] will change name to $NEW_NAME$"
 ARTIFACT_CHANGES_DESC: "[ARTIFACT.GetName] will change description"
 ARTIFACT_CHANGES_VISUALS: "[ARTIFACT.GetName] will change visuals"
 ARTIFACT_CHANGES_TYPE: "[ARTIFACT.GetName] will become a $NEW_TYPE$"
 ARTIFACT_CHANGES_RARITY: "[ARTIFACT.GetName] will change rarity and become $NEW_RARITY$"
 ARTIFACT_CHANGES_MODIFIER: "[ARTIFACT.GetName] will provide these benefits:\n$NEW_MODIFIER$"
 ARTIFACT_CHANGES_TEMPLATE: "[ARTIFACT.GetName] will be a $NEW_TEMPLATE$"
 ARTIFACT_CHANGES_DURABILITY: "[ARTIFACT.GetName] will change durability to $NEW_DURABILITY$ / $MAX_DURABILITY$"
 ARTIFACT_FULLY_REPAIRED: "[ARTIFACT.GetName] will be fully repaired and restored"
 NEW_ARTIFACT_TOOLTIP: "This is a newly acquired [artifact|e]"
 ARTIFACT_RARITY_AND_TYPE: "[ARTIFACT.GetRarity] [ARTIFACT.GetType]"
 ARTIFACT_TYPE_ONLY: "[ARTIFACT.GetType]"
 ARTIFACT_RARITY_AND_SLOT_TYPE: "[ARTIFACT.GetRarity] [ARTIFACT.GetSlotType]"
 ARTIFACT_SLOT_TYPE_ONLY: "[ARTIFACT.GetSlotType]"
 INVENTORY_ARTIFACTS_SINGLE: "[inventory_artifact|E]"
 RENAME_ARTIFACT: "#T Rename Artifact#!"
 RENAME_ARTIFACT_TITLE: "Rename [ARTIFACT.GetNameNoTooltip]"
 RENAME_ARTIFACT_DESC: "Change the name of [ARTIFACT.GetNameNoTooltip]"
 RENAME_ARTIFACT_ACCEPT: "Accept"
 ARTIFACT_CURRENT_HOLDER: "Current Holder: [Artifact.GetOwner.GetName]"
 ARTIFACT_CREATOR: "Creator: [Artifact.GetCreator.GetName]"
 DETAILS_TAB_HISTORY: "History"
 DETAILS_TAB_CLAIMS: "Claimants"
 DETAILS_TAB_CLAIM_INTERACTIONS: "You have a claim"
 DETAILS_TAB_NO_CLAIMANTS: "No one has an [artifact_claim|E] on this [artifact|E]"
 CHARACTER_HAS_NO_ARTIFACTS: "No [artifacts|E]"
 CHARACTER_HAS_NO_CLAIMED_ARTIFACTS: "No [artifact_claims|E]"
 ARTIFACT_DETAILS_TITLE: "Artifact Details"
 ARTIFACT_DETAILS: "#T $ARTIFACT_DETAILS_TITLE$#!"
 ARTIFACT_SORTING_ALL_BUTTON: "All"
 created: "Created"
 reforged: "Reforged"
 given: "Given"
 stolen: "Stolen"
 conquest: "Conquered"
 created_before_history: "Unknown Creation"
 inherited: "Inherited"
 discovered: "Discovered"
 taken_in_siege: "Taken in a Siege"
 won_in_duel: "Won in a Duel"
 taken_in_battle: "Seized in a Battle"
 tournament_prize_creation: "Tournament Prize"
 tournament_prize_won: "Won in a Contest"
 CLAIMANT_ENTRY_HOUSE_HEAD: "House Head: [ClaimantEntry.GetHouse.GetHeadOfHouse.GetName]"
 ARTIFACT_YEARS_UNTIL_DECAY: "[Artifact.GetYearsUntilDecay] years"
 ARTIFACT_DURABILITY_TOOLTIP: "#T Durability#!\n#V $DURABILITY|1$ / $MAX_DURABILITY|1$#!\nAt the current rate of decay this [artifact|e] will last for [ARTIFACT.GetYearsUntilDecay] years before it runs out of [durability|E] and breaks."
 ARTIFACT_DURABILITY_NO_DECAY_TOOLTIP: "#T Durability#!\n#V $DURABILITY|1$ / $MAX_DURABILITY|1$#!\nThis [artifact|e] is not currently decaying and will last forever unless something causes it to lose [durability|E]."
 DECAY_TOTAL: "Yearly decay"
 DECAY_BASE: "Base decay"
 CHARACTER_HAS_NO_VALID_SLOT: "@warning_icon!#X No available slot which can hold [ARTIFACT.GetName]#!"
 SLOT_CANNOT_HOLD_ARTIFACT: "@warning_icon!#X $SLOT$ cannot hold artifacts of type $TYPE$#!"
 EQUIP_ARTIFACT: "\n#I Click to equip this#!"
 UNEQUIP_QUICK_TT: "#T Unequip#!"
 EQUIP_ARTIFACT_REPLACE: "\n#I Click to replace $REPLACE_ARTIFACT$ with this#!"
 SELECT_ARTIFACT: "Select Artifact"
 ARTIFACT_ALREADY_EQUIPPED_IN_SLOT: "@warning_icon!#X [ARTIFACT.GetNameNoTooltip] is already equipped in this slot#!"
 INVENTORY_SLOT_TT: "#T [InventorySlot.GetName] Slot\n#![SelectLocalization( InventoryView.IsSelectedSlot( InventorySlot.Self ), 'SELECT_ARTIFACT_FOR_SLOT', 'SELECT_INVENTORY_SLOT' )]"
 SELECT_INVENTORY_SLOT: "#I Click to show [InventorySlot.GetName] Artifacts#!"
 SELECT_ARTIFACT_FOR_SLOT: "#I Click to deselect#!"
 CHARACTER_CANNOT_DECLARE_WAR: "[Character.Custom('ShortNameNoTooltip')|U] cannot currently declare war for this [artifact|e]"
 CHARACTER_CANNOT_DECLARE_WAR_SHORT: "Cannot declare War"
 CHARACTER_CAN_DECLARE_WAR: "[Character.Custom('ShortNameNoTooltip')|U] can declare war for this [artifact|e]"
 #DECLARE_WAR_FOR_ARTIFACT_TOOLTIP: "#T Declare War for Artifact#!" #<DELETE THIS KEY>
 DUEL_FOR_ARTIFACT_TOOLTIP: "#T Duel for Artifact#!"
 ARTIFACT_SORT_ORDER_TOOLTIP: "#T Change Artifact sort order#!"
 ARTIFACT_CLAIM_SORT_ORDER_TOOLTIP: "#T Change [artifact_claim|e] sort order#!"
 ARTIFACT_SORTING_TAB_TOOLTIP: "[InventorySlotType.GetName] [artifacts|e]"
 ARTIFACT_SORTING_TAB_ALL_TOOLTIP: "All [artifacts|e]"
 acquisition_date: "Acquisition Date"
 creation_date: "Creation Date"
 type: "Type"
 rarity: "Rarity"
 name: "Name"
 durability: "Durability"
 artifact_type: "Artifact Type"
 claim_type: "Claim Type"
 UNEQUIP_ARTIFACT: "\n#I Click to unequip this#!"
 ARTIFACT_EQUIPPED_TOOLTIP: "#T [artifact|e] is equipped#!"
 ARTIFACT_AT_MAX_DURABILITY: "@warning_icon!#X [ARTIFACT.GetNameNoTooltip] is already at max durability#!"
 IMMINENT_HOUSE_CLAIMANT: "[Artifact.GetOwner.GetHouse.GetName] #low ( [Artifact.GetYearsUntilHouseClaim( Artifact.GetOwner.Self )] years )#!"
 HOUSE_CLAIMS: "#help House Claims:#!"
 DECAY_ARTIFACT_EQUIPPED: "Equipped"
 DECAY_ARTIFACT_DISPlAY: "On Display"
 DECAY_ARTIFACT_UNEQUIPPED: "In Storage"
 DISPLAY_ARTIFACT: "#I \nClick to display#!"
 PUT_COURT_ARTIFACT_ON_DISPLAY: "#I \nClick to display here#!"
 REMOVE_COURT_ARTIFACT_FROM_DISPLAY: "#I \nClick to store#!"
 MOVE_COURT_ARTIFACT_TO_DISPLAY: "#I \nClick to move here#!"
 COURT_ARTIFACT_ON_DISPLAY: "#T [court_artifact|e] is on display#!"
 ROYAL_COURT: "Royal Court"
 ARTIFACT_STORAGE: "All Court Artifacts"
 ARTIFACT_CLAIMS: "Artifact Claims"
 NEW_ARTIFACT: "#V New#!"
 EQUIPPED_ARTIFACT: "[Select_CString( Artifact.IsCourtArtifact, 'Displayed', 'Equipped' )] [Inventory.GetEquippedSlotOfMaxSlotText( Artifact.Self )]"
 GIFT_EQUIPPED_ARTIFACT: "[Select_CString( Artifact.IsCourtArtifact, 'Displayed', 'Equipped' )]"
 CHARACTER_WITHOUT_ROYAL_COURT_COURT_ARTIFACT_TAB: "Since [Character.Custom('ShortName')] [Character.LocalPlayerString( 'have', 'has' )] no [royal_court|e], [Character.Custom('ShortName')] [Character.LocalPlayerString( 'have', 'has' )] nowhere to display these [court_artifacts|e]."
 ARTIFACT_TITLE_ASSOCIATION: "Inherited along with [Artifact.GetAssociatedTitle.GetNameWithUnderlying]"
 EMPTY_INVENTORY_TOOLTIP: "@warning_icon!#X Cannot view Inventory since there are no [artifacts|e] or [artifact_claims|e] to display#!"
 ARTIFACT_PERSONAL_CLAIM: "Personal Claim"
 ARTIFACT_HOUSE_CLAIM: "House Claim"
 REFORGE_ARTIFACT_COMPLETELY: "Reforge [ARTIFACT.GetNameNoTooltip] into a $NEW_TYPE$"
 REFORGE_COST: "Reforge Cost: $COST$"
 REPAIR_COST: "Repair Cost: $COST$"
 CANNOT_REFORGE_WITHOUT_ANTIQUARIAN: "@warning_icon!#X Cannot reforge [artifacts|e] without an $antiquarian_court_position$#!"
 ARTIFACT_FALLBACK_EFFECT: "#S If you do not fulfill the requirements:#!\n[Artifact.GetFallbackEffects]"
 ARTIFACT_EFFECT: "[SelectLocalization( Artifact.HasCanBenefit, 'ARTIFACT_EFFECT_HAS_CAN_BENEFIT', '' )][Artifact.GetModifierEffects]"
 ARTIFACT_EFFECT_HAS_CAN_BENEFIT: "#S If you fulfill the #TOOLTIP:ARTIFACT_EFFECT_REQUIREMENT_TT #L Requirements#!#!:#!\n"
 ARTIFACT_EFFECT_REQUIREMENT_TT: "[Artifact.GetCanBenefitPlayerDesc]"
 artifact_bowl: "Bowl"
 artifact_plate: "Plate"
 artifact_urn: "Urn"
 artifact_tun_barrel: "Wine Tun"
