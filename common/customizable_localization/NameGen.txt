#Tier
CharacterTierCheck = {
	type = character
	text = {
		trigger = {
			exists = title:d_CTFA_vanity_0
			is_landed = yes
			any_held_title = {
				OR = {
					this = title:d_CTFA_vanity_0
					this = title:d_CTFA_vanity_1
					this = title:d_CTFA_vanity_2
					this = title:d_CTFA_vanity_3
					this = title:d_CTFA_vanity_4
					this = title:d_CTFA_vanity_5
					this = title:d_CTFA_vanity_6
					this = title:d_CTFA_vanity_7
					this = title:d_CTFA_vanity_8
					this = title:d_CTFA_vanity_9
				}
			}
		}
		localization_key = Tier_Gen_Default
	}
	text = {
		fallback = yes
		localization_key = Tier_Gen_NPE
	}
}
CharacterTierCheckAfter = {
	parent = CharacterTierCheck
	suffix = "_After"
}
CharacterTierCheckBefore = {
	parent = CharacterTierCheck
	suffix = "_Before"
}


CharacterNameCheck = {
	type = character
	text = {
		trigger = {
			OR = {
				AND = {
                    exists = dynasty
                    dynasty = {
                        any_in_list = {
                            variable = name_pack_support_dynasty
                            this = root
                        }
                    }
                }
                any_in_global_list = {
                    variable = name_pack_support_global
                    this = root
                }
			}
		}
		localization_key = Supported_Name
	}
    text = {
        fallback = yes
		localization_key = Nonsupported_Name
    }
}
CharacterPatCheck = {
	type = character
	text = {
		trigger = {
			exists = father
            father = {
                OR = {
                    AND = {
                        exists = dynasty
                        dynasty = {
                            any_in_list = {
                                variable = name_pack_support_dynasty
                                this = root.father
                            }
                        }
                    }
                    any_in_global_list = {
                        variable = name_pack_support_global
                        this = root.father
                    }
                }
            }
		}
		localization_key = Supported_Patronym
	}
    text = {
        trigger = {
            exists = father
        }
        localization_key = Nonsupported_Patronym
    }
	text = {
		fallback = yes
		localization_key = Gui_blank
	}
}
CharacterPatCheckAfter = {
	parent = CharacterPatCheck
	suffix = "_After"
}
CharacterPatCheckBefore = {
	parent = CharacterPatCheck
	suffix = "_Before"
}
TriaNominaHouseCheck = {
	type = character
	text = {
		trigger = {
			exists = house.var:name_founder
			exists = house.var:roman
			house.var:name_founder = {
				save_temporary_scope_as = good_lad
			}
			NOT = {
				root = scope:good_lad
			}
			dynasty = {
				any_in_list = {
					variable = name_pack_support_dynasty
					this = scope:good_lad
				}
			}
		}
		localization_key = Supported_House
	}
	text = {
		fallback = yes
		localization_key = Gui_blank
	}
}
TriaNominaHouseCheckAfter = {
	parent = TriaNominaHouseCheck
	suffix = "_After"
}
TriaNominaHouseCheckBefore = {
	parent = TriaNominaHouseCheck
	suffix = "_Before"
}
TriaNominaDynastyCheck = {
	type = character
	text = {
		trigger = {
			exists = dynasty.var:name_founder
			dynasty.var:name_founder = {
				save_temporary_scope_as = good_lad
			}
			NOT = {
				root = scope:good_lad
			}
			dynasty = {
				any_in_list = {
					variable = name_pack_support_dynasty
					this = scope:good_lad
				}
			}
		}
		localization_key = Supported_Dynasty
	}
	text = {
		fallback = yes
		localization_key = Gui_blank
	}
}
TriaNominaDynastyCheckAfter = {
	parent = TriaNominaDynastyCheck
	suffix = "_After"
}
TriaNominaDynastyCheckBefore = {
	parent = TriaNominaDynastyCheck
	suffix = "_Before"
}
CharacterHouseCheck = {
	type = character
	text = {
		trigger = {
			exists = house.var:name_founder
			house.var:name_founder = {
				save_temporary_scope_as = good_lad
			}
			NOT = {
				root = scope:good_lad
			}
			dynasty = {
				any_in_list = {
					variable = name_pack_support_dynasty
					this = scope:good_lad
				}
			}
		}
		localization_key = Supported_House
	}
	text = {
		fallback = yes
		localization_key = Gui_blank
	}
}
CharacterHouseCheckAfter = {
	parent = CharacterHouseCheck
	suffix = "_After"
}
CharacterHouseCheckBefore = {
	parent = CharacterHouseCheck
	suffix = "_Before"
}
CharacterSpouseHouseCheck = {
	type = character
	text = {
		trigger = {
			exists = primary_spouse
			trigger_if = {
				limit = {
					is_male = yes
				}
				matrilinear_marriage = yes
			}
			trigger_else = {
				matrilinear_marriage = no
			}
			primary_spouse = {
				exists = house.var:name_founder
				house.var:name_founder = {
					save_temporary_scope_as = good_lad
				}
				NOT = {
					root = scope:good_lad
				}
				dynasty = {
					any_in_list = {
						variable = name_pack_support_dynasty
						this = scope:good_lad
					}
				}
			}
		}
		localization_key = Supported_Spouse_House
	}
	text = {
		trigger = {
			any_former_spouse = {
				exists = this
				exists = house.var:name_founder
				house.var:name_founder = {
					save_temporary_scope_as = good_lad
				}
				NOT = {
					root = scope:good_lad
				}
				dynasty = {
					any_in_list = {
						variable = name_pack_support_dynasty
						this = scope:good_lad
					}
				}
			}
			trigger_if = {
				limit = {
					is_male = yes
				}
				matrilinear_marriage = yes
			}
			trigger_else = {
				matrilinear_marriage = no
			}
		}
		localization_key = Supported_Spouse_House_DEAD
	}
	text = {
		fallback = yes
		localization_key = Gui_blank
	}
}
CharacterSpouseHouseCheckAfter = {
	parent = CharacterSpouseHouseCheck
	suffix = "_After"
}
CharacterSpouseHouseCheckBefore = {
	parent = CharacterSpouseHouseCheck
	suffix = "_Before"
}